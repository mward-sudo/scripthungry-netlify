{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/michael/Dev/remix/scripthungry-vercel/app/root.tsx", "../app/components/footer.tsx", "../app/components/unknown-link.tsx", "../app/components/navigation/mobile-drawer.tsx", "../app/components/navigation/nav.tsx", "../app/components/navigation/burger-button.tsx", "../app/components/navigation/nav-link.tsx", "../app/generated/graphql.server.ts", "../app/lib/graphql.server.ts", "/Users/michael/Dev/remix/scripthungry-vercel/app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from '@remix-run/node'\nimport { RemixServer } from '@remix-run/react'\nimport { renderToString } from 'react-dom/server'\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />,\n  )\n\n  responseHeaders.set('Content-Type', 'text/html')\n\n  return new Response('<!DOCTYPE html>' + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  })\n}\n", "import type { LoaderFunction, MetaFunction } from '@remix-run/node'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n} from '@remix-run/react'\n\nimport { Footer } from './components/footer'\nimport { MobileDrawer } from './components/navigation/mobile-drawer'\nimport { Nav } from './components/navigation/nav'\nimport type {\n  GetNavigationQuery,\n  NavigationLink,\n} from './generated/graphql.server'\nimport { GetNavigation } from './generated/graphql.server'\nimport { graphQlClient } from './lib/graphql.server'\nimport styles from './styles/app.css'\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'New Remix App',\n  viewport: 'width=device-width,initial-scale=1',\n})\n\nexport const links = () => {\n  return [{ rel: 'stylesheet', href: styles }]\n}\n\ntype LoaderData = {\n  navLinks: NavigationLink[]\n}\n\nexport const loader: LoaderFunction = async () => {\n  const navigationData: GetNavigationQuery = await graphQlClient.request(\n    GetNavigation,\n  )\n  console.log(navigationData)\n\n  return {\n    navLinks: navigationData?.graphcms?.navigationLinks,\n  }\n}\n\nexport const App = () => {\n  const { navLinks }: LoaderData = useLoaderData()\n  return (\n    <html lang='en' className='h-full'>\n      <head>\n        <Meta />\n        <Links />\n      </head>\n\n      <body className='h-full'>\n        <div className='drawer min-h-screen w-full'>\n          <input id='my-drawer-3' type='checkbox' className='drawer-toggle' />\n          <div className='drawer-content flex flex-col'>\n            <div className='container mx-auto flex min-h-screen flex-col p-4'>\n              <Nav navLinks={navLinks} />\n              <div className='prose mx-8 min-w-0 flex-1'>\n                <Outlet />\n              </div>\n              <Footer />\n            </div>\n          </div>\n          <MobileDrawer navLinks={navLinks} />\n        </div>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  )\n}\n\nexport default App\n", "export const Footer = () => {\n  const today = new Date()\n  const firstYear = 2021\n  const currentYear = today.getFullYear()\n\n  return (\n    <footer className='p-4 pt-24 pb-8 text-center'>\n      Copyright \u00A9 {firstYear}\n      {currentYear > firstYear ? `-${currentYear}` : ``} Michael Ward\n    </footer>\n  )\n}\n", "import { Link as RemixLink } from '@remix-run/react'\nimport type { RemixLinkProps } from '@remix-run/react/components'\n\n/** Used for unknown links that may be external links. If the `to` prop is an external url then\n * render an `a` element, else use the remix `Link` component */\nexport const UnknownLink = ({ to, children, ...props }: RemixLinkProps) => {\n  const filteredProps = () => {\n    const { prefetch, reloadDocument, replace, state, ...filteredProps } = props\n    return filteredProps\n  }\n  if (to.toString().startsWith('http')) {\n    return (\n      <a href={to.toString()} {...filteredProps}>\n        {children}\n      </a>\n    )\n  }\n  return (\n    <RemixLink to={to} {...props}>\n      {children}\n    </RemixLink>\n  )\n}\n", "import type { NavigationLink } from '~/generated/graphql.server'\n\nimport { UnknownLink } from '../unknown-link'\n\nexport const MobileDrawer = ({ navLinks }: { navLinks: NavigationLink[] }) => (\n  <div className='drawer-side'>\n    <label htmlFor='my-drawer-3' className='drawer-overlay'></label>\n    <ul className='menu w-80 overflow-y-auto bg-base-100 p-4'>\n      {navLinks?.map(({ url, linkText }) => (\n        <li key={url}>\n          <UnknownLink to={url}>{linkText}</UnknownLink>\n        </li>\n      ))}\n    </ul>\n  </div>\n)\n", "import { Link } from '@remix-run/react'\n\nimport type { NavigationLink } from '~/generated/graphql.server'\n\nimport { BurgerButton } from './burger-button'\nimport { NavLink } from './nav-link'\n\nexport const Nav = ({ navLinks }: { navLinks: NavigationLink[] }) => {\n  return (\n    <div className='sticky top-0 z-50 mb-8 text-base-content'>\n      <div className='navbar rounded-box min-h-fit overflow-hidden border-2 border-transparent border-b-neutral/20 border-opacity-50 bg-gradient-to-b from-base-300/80 to-base-300/60 py-0 pl-4 pr-0 backdrop-blur-md'>\n        <div className='mr-2 flex-1 px-2'>\n          <Link to='/'>scriptHungry</Link>\n        </div>\n        <div className='flex-none md:hidden'>\n          <BurgerButton />\n        </div>\n        <div className='hidden flex-none md:block'>\n          <ul className='menu menu-horizontal'>\n            {navLinks.map(({ url, linkText }) => (\n              // eslint-disable-next-line jsx-a11y/anchor-has-content\n              <NavLink url={url} linkText={linkText} key={`nav-link-${url}`} />\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n", "export const BurgerButton = () => (\n  <label htmlFor='my-drawer-3' className='btn btn-ghost btn-square'>\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      fill='none'\n      viewBox='0 0 24 24'\n      className='inline-block h-6 w-6 stroke-current'\n    >\n      <path\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        strokeWidth='2'\n        d='M4 6h16M4 12h16M4 18h16'\n      ></path>\n    </svg>\n  </label>\n)\n", "import { UnknownLink } from '../unknown-link'\n\nexport const NavLink = ({\n  url,\n  linkText,\n}: {\n  url: string\n  linkText: string\n}) => (\n  <li>\n    <UnknownLink to={url} className='py-4' prefetch='intent' aria-live='polite'>\n      {linkText}\n    </UnknownLink>\n  </li>\n)\n", "import gql from 'graphql-tag';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** A date string, such as 2007-12-03 (YYYY-MM-DD), compliant with ISO 8601 standard for representation of dates using the Gregorian calendar. */\n  Date: any;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the date-timeformat outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representationof dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** Raw JSON value */\n  Json: any;\n  /** The Long scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1. */\n  Long: any;\n  /** Slate-compatible RichText AST */\n  RichTextAST: any;\n};\n\nexport type Aggregate = {\n  __typename?: 'Aggregate';\n  count: Scalars['Int'];\n};\n\n/** Asset system model */\nexport type Asset = Node & {\n  __typename?: 'Asset';\n  authorAvatar: Array<Author>;\n  /** Enter a caption to appear with the image */\n  caption?: Maybe<Scalars['String']>;\n  coverImagePost: Array<Post>;\n  /** The time the document was created */\n  createdAt: Scalars['DateTime'];\n  /** User that created this document */\n  createdBy?: Maybe<User>;\n  /** Get the document in other stages */\n  documentInStages: Array<Asset>;\n  /** The file name */\n  fileName: Scalars['String'];\n  /** The file handle */\n  handle: Scalars['String'];\n  /** The height of the file */\n  height?: Maybe<Scalars['Float']>;\n  /** List of Asset versions */\n  history: Array<Version>;\n  /** The unique identifier */\n  id: Scalars['ID'];\n  imageShowcaseCard: Array<ShowcaseCard>;\n  /** System Locale field */\n  locale: Locale;\n  /** Get the other localizations for this document */\n  localizations: Array<Asset>;\n  /** The mime type of the file */\n  mimeType?: Maybe<Scalars['String']>;\n  /** The time the document was published. Null on documents in draft stage. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** User that last published this document */\n  publishedBy?: Maybe<User>;\n  scheduledIn: Array<ScheduledOperation>;\n  seoImage: Array<Seo>;\n  /** The file size */\n  size?: Maybe<Scalars['Float']>;\n  /** System stage field */\n  stage: Stage;\n  /** The time the document was updated */\n  updatedAt: Scalars['DateTime'];\n  /** User that last updated this document */\n  updatedBy?: Maybe<User>;\n  /** Get the url for the asset with provided transformations applied. */\n  url: Scalars['String'];\n  /** The file width */\n  width?: Maybe<Scalars['Float']>;\n};\n\n\n/** Asset system model */\nexport type AssetAuthorAvatarArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  orderBy?: InputMaybe<AuthorOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<AuthorWhereInput>;\n};\n\n\n/** Asset system model */\nexport type AssetCoverImagePostArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  orderBy?: InputMaybe<PostOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PostWhereInput>;\n};\n\n\n/** Asset system model */\nexport type AssetCreatedAtArgs = {\n  variation?: SystemDateTimeFieldVariation;\n};\n\n\n/** Asset system model */\nexport type AssetCreatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\n/** Asset system model */\nexport type AssetDocumentInStagesArgs = {\n  includeCurrent?: Scalars['Boolean'];\n  inheritLocale?: Scalars['Boolean'];\n  stages?: Array<Stage>;\n};\n\n\n/** Asset system model */\nexport type AssetHistoryArgs = {\n  limit?: Scalars['Int'];\n  skip?: Scalars['Int'];\n  stageOverride?: InputMaybe<Stage>;\n};\n\n\n/** Asset system model */\nexport type AssetImageShowcaseCardArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  orderBy?: InputMaybe<ShowcaseCardOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<ShowcaseCardWhereInput>;\n};\n\n\n/** Asset system model */\nexport type AssetLocalizationsArgs = {\n  includeCurrent?: Scalars['Boolean'];\n  locales?: Array<Locale>;\n};\n\n\n/** Asset system model */\nexport type AssetPublishedAtArgs = {\n  variation?: SystemDateTimeFieldVariation;\n};\n\n\n/** Asset system model */\nexport type AssetPublishedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\n/** Asset system model */\nexport type AssetScheduledInArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<ScheduledOperationWhereInput>;\n};\n\n\n/** Asset system model */\nexport type AssetSeoImageArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  orderBy?: InputMaybe<SeoOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<SeoWhereInput>;\n};\n\n\n/** Asset system model */\nexport type AssetUpdatedAtArgs = {\n  variation?: SystemDateTimeFieldVariation;\n};\n\n\n/** Asset system model */\nexport type AssetUpdatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\n/** Asset system model */\nexport type AssetUrlArgs = {\n  transformation?: InputMaybe<AssetTransformationInput>;\n};\n\n/** A connection to a list of items. */\nexport type AssetConnection = {\n  __typename?: 'AssetConnection';\n  aggregate: Aggregate;\n  /** A list of edges. */\n  edges: Array<AssetEdge>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\nexport type AssetCreateInput = {\n  authorAvatar?: InputMaybe<AuthorCreateManyInlineInput>;\n  caption?: InputMaybe<Scalars['String']>;\n  coverImagePost?: InputMaybe<PostCreateManyInlineInput>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  fileName: Scalars['String'];\n  handle: Scalars['String'];\n  height?: InputMaybe<Scalars['Float']>;\n  imageShowcaseCard?: InputMaybe<ShowcaseCardCreateManyInlineInput>;\n  /** Inline mutations for managing document localizations excluding the default locale */\n  localizations?: InputMaybe<AssetCreateLocalizationsInput>;\n  mimeType?: InputMaybe<Scalars['String']>;\n  seoImage?: InputMaybe<SeoCreateManyInlineInput>;\n  size?: InputMaybe<Scalars['Float']>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  width?: InputMaybe<Scalars['Float']>;\n};\n\nexport type AssetCreateLocalizationDataInput = {\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  fileName: Scalars['String'];\n  handle: Scalars['String'];\n  height?: InputMaybe<Scalars['Float']>;\n  mimeType?: InputMaybe<Scalars['String']>;\n  size?: InputMaybe<Scalars['Float']>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  width?: InputMaybe<Scalars['Float']>;\n};\n\nexport type AssetCreateLocalizationInput = {\n  /** Localization input */\n  data: AssetCreateLocalizationDataInput;\n  locale: Locale;\n};\n\nexport type AssetCreateLocalizationsInput = {\n  /** Create localizations for the newly-created document */\n  create?: InputMaybe<Array<AssetCreateLocalizationInput>>;\n};\n\nexport type AssetCreateOneInlineInput = {\n  /** Connect one existing Asset document */\n  connect?: InputMaybe<AssetWhereUniqueInput>;\n  /** Create and connect one Asset document */\n  create?: InputMaybe<AssetCreateInput>;\n};\n\n/** An edge in a connection. */\nexport type AssetEdge = {\n  __typename?: 'AssetEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node: Asset;\n};\n\n/** Identifies documents */\nexport type AssetManyWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<AssetWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<AssetWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<AssetWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  authorAvatar_every?: InputMaybe<AuthorWhereInput>;\n  authorAvatar_none?: InputMaybe<AuthorWhereInput>;\n  authorAvatar_some?: InputMaybe<AuthorWhereInput>;\n  caption?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  caption_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  caption_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  caption_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  caption_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  caption_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  caption_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  caption_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  caption_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  caption_starts_with?: InputMaybe<Scalars['String']>;\n  coverImagePost_every?: InputMaybe<PostWhereInput>;\n  coverImagePost_none?: InputMaybe<PostWhereInput>;\n  coverImagePost_some?: InputMaybe<PostWhereInput>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdBy?: InputMaybe<UserWhereInput>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  imageShowcaseCard_every?: InputMaybe<ShowcaseCardWhereInput>;\n  imageShowcaseCard_none?: InputMaybe<ShowcaseCardWhereInput>;\n  imageShowcaseCard_some?: InputMaybe<ShowcaseCardWhereInput>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  publishedBy?: InputMaybe<UserWhereInput>;\n  scheduledIn_every?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_none?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_some?: InputMaybe<ScheduledOperationWhereInput>;\n  seoImage_every?: InputMaybe<SeoWhereInput>;\n  seoImage_none?: InputMaybe<SeoWhereInput>;\n  seoImage_some?: InputMaybe<SeoWhereInput>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedBy?: InputMaybe<UserWhereInput>;\n};\n\nexport enum AssetOrderByInput {\n  CaptionAsc = 'caption_ASC',\n  CaptionDesc = 'caption_DESC',\n  CreatedAtAsc = 'createdAt_ASC',\n  CreatedAtDesc = 'createdAt_DESC',\n  FileNameAsc = 'fileName_ASC',\n  FileNameDesc = 'fileName_DESC',\n  HandleAsc = 'handle_ASC',\n  HandleDesc = 'handle_DESC',\n  HeightAsc = 'height_ASC',\n  HeightDesc = 'height_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  MimeTypeAsc = 'mimeType_ASC',\n  MimeTypeDesc = 'mimeType_DESC',\n  PublishedAtAsc = 'publishedAt_ASC',\n  PublishedAtDesc = 'publishedAt_DESC',\n  SizeAsc = 'size_ASC',\n  SizeDesc = 'size_DESC',\n  UpdatedAtAsc = 'updatedAt_ASC',\n  UpdatedAtDesc = 'updatedAt_DESC',\n  WidthAsc = 'width_ASC',\n  WidthDesc = 'width_DESC'\n}\n\n/** Transformations for Assets */\nexport type AssetTransformationInput = {\n  document?: InputMaybe<DocumentTransformationInput>;\n  image?: InputMaybe<ImageTransformationInput>;\n  /** Pass true if you want to validate the passed transformation parameters */\n  validateOptions?: InputMaybe<Scalars['Boolean']>;\n};\n\nexport type AssetUpdateInput = {\n  authorAvatar?: InputMaybe<AuthorUpdateManyInlineInput>;\n  caption?: InputMaybe<Scalars['String']>;\n  coverImagePost?: InputMaybe<PostUpdateManyInlineInput>;\n  fileName?: InputMaybe<Scalars['String']>;\n  handle?: InputMaybe<Scalars['String']>;\n  height?: InputMaybe<Scalars['Float']>;\n  imageShowcaseCard?: InputMaybe<ShowcaseCardUpdateManyInlineInput>;\n  /** Manage document localizations */\n  localizations?: InputMaybe<AssetUpdateLocalizationsInput>;\n  mimeType?: InputMaybe<Scalars['String']>;\n  seoImage?: InputMaybe<SeoUpdateManyInlineInput>;\n  size?: InputMaybe<Scalars['Float']>;\n  width?: InputMaybe<Scalars['Float']>;\n};\n\nexport type AssetUpdateLocalizationDataInput = {\n  fileName?: InputMaybe<Scalars['String']>;\n  handle?: InputMaybe<Scalars['String']>;\n  height?: InputMaybe<Scalars['Float']>;\n  mimeType?: InputMaybe<Scalars['String']>;\n  size?: InputMaybe<Scalars['Float']>;\n  width?: InputMaybe<Scalars['Float']>;\n};\n\nexport type AssetUpdateLocalizationInput = {\n  data: AssetUpdateLocalizationDataInput;\n  locale: Locale;\n};\n\nexport type AssetUpdateLocalizationsInput = {\n  /** Localizations to create */\n  create?: InputMaybe<Array<AssetCreateLocalizationInput>>;\n  /** Localizations to delete */\n  delete?: InputMaybe<Array<Locale>>;\n  /** Localizations to update */\n  update?: InputMaybe<Array<AssetUpdateLocalizationInput>>;\n  upsert?: InputMaybe<Array<AssetUpsertLocalizationInput>>;\n};\n\nexport type AssetUpdateManyInput = {\n  caption?: InputMaybe<Scalars['String']>;\n  fileName?: InputMaybe<Scalars['String']>;\n  height?: InputMaybe<Scalars['Float']>;\n  /** Optional updates to localizations */\n  localizations?: InputMaybe<AssetUpdateManyLocalizationsInput>;\n  mimeType?: InputMaybe<Scalars['String']>;\n  size?: InputMaybe<Scalars['Float']>;\n  width?: InputMaybe<Scalars['Float']>;\n};\n\nexport type AssetUpdateManyLocalizationDataInput = {\n  fileName?: InputMaybe<Scalars['String']>;\n  height?: InputMaybe<Scalars['Float']>;\n  mimeType?: InputMaybe<Scalars['String']>;\n  size?: InputMaybe<Scalars['Float']>;\n  width?: InputMaybe<Scalars['Float']>;\n};\n\nexport type AssetUpdateManyLocalizationInput = {\n  data: AssetUpdateManyLocalizationDataInput;\n  locale: Locale;\n};\n\nexport type AssetUpdateManyLocalizationsInput = {\n  /** Localizations to update */\n  update?: InputMaybe<Array<AssetUpdateManyLocalizationInput>>;\n};\n\nexport type AssetUpdateOneInlineInput = {\n  /** Connect existing Asset document */\n  connect?: InputMaybe<AssetWhereUniqueInput>;\n  /** Create and connect one Asset document */\n  create?: InputMaybe<AssetCreateInput>;\n  /** Delete currently connected Asset document */\n  delete?: InputMaybe<Scalars['Boolean']>;\n  /** Disconnect currently connected Asset document */\n  disconnect?: InputMaybe<Scalars['Boolean']>;\n  /** Update single Asset document */\n  update?: InputMaybe<AssetUpdateWithNestedWhereUniqueInput>;\n  /** Upsert single Asset document */\n  upsert?: InputMaybe<AssetUpsertWithNestedWhereUniqueInput>;\n};\n\nexport type AssetUpdateWithNestedWhereUniqueInput = {\n  /** Document to update */\n  data: AssetUpdateInput;\n  /** Unique document search */\n  where: AssetWhereUniqueInput;\n};\n\nexport type AssetUpsertInput = {\n  /** Create document if it didn't exist */\n  create: AssetCreateInput;\n  /** Update document if it exists */\n  update: AssetUpdateInput;\n};\n\nexport type AssetUpsertLocalizationInput = {\n  create: AssetCreateLocalizationDataInput;\n  locale: Locale;\n  update: AssetUpdateLocalizationDataInput;\n};\n\nexport type AssetUpsertWithNestedWhereUniqueInput = {\n  /** Upsert data */\n  data: AssetUpsertInput;\n  /** Unique document search */\n  where: AssetWhereUniqueInput;\n};\n\n/** Identifies documents */\nexport type AssetWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<AssetWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<AssetWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<AssetWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  authorAvatar_every?: InputMaybe<AuthorWhereInput>;\n  authorAvatar_none?: InputMaybe<AuthorWhereInput>;\n  authorAvatar_some?: InputMaybe<AuthorWhereInput>;\n  caption?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  caption_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  caption_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  caption_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  caption_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  caption_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  caption_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  caption_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  caption_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  caption_starts_with?: InputMaybe<Scalars['String']>;\n  coverImagePost_every?: InputMaybe<PostWhereInput>;\n  coverImagePost_none?: InputMaybe<PostWhereInput>;\n  coverImagePost_some?: InputMaybe<PostWhereInput>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdBy?: InputMaybe<UserWhereInput>;\n  fileName?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  fileName_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  fileName_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  fileName_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  fileName_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  fileName_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  fileName_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  fileName_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  fileName_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  fileName_starts_with?: InputMaybe<Scalars['String']>;\n  handle?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  handle_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  handle_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  handle_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  handle_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  handle_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  handle_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  handle_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  handle_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  handle_starts_with?: InputMaybe<Scalars['String']>;\n  height?: InputMaybe<Scalars['Float']>;\n  /** All values greater than the given value. */\n  height_gt?: InputMaybe<Scalars['Float']>;\n  /** All values greater than or equal the given value. */\n  height_gte?: InputMaybe<Scalars['Float']>;\n  /** All values that are contained in given list. */\n  height_in?: InputMaybe<Array<Scalars['Float']>>;\n  /** All values less than the given value. */\n  height_lt?: InputMaybe<Scalars['Float']>;\n  /** All values less than or equal the given value. */\n  height_lte?: InputMaybe<Scalars['Float']>;\n  /** All values that are not equal to given value. */\n  height_not?: InputMaybe<Scalars['Float']>;\n  /** All values that are not contained in given list. */\n  height_not_in?: InputMaybe<Array<Scalars['Float']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  imageShowcaseCard_every?: InputMaybe<ShowcaseCardWhereInput>;\n  imageShowcaseCard_none?: InputMaybe<ShowcaseCardWhereInput>;\n  imageShowcaseCard_some?: InputMaybe<ShowcaseCardWhereInput>;\n  mimeType?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  mimeType_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  mimeType_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  mimeType_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  mimeType_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  mimeType_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  mimeType_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  mimeType_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  mimeType_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  mimeType_starts_with?: InputMaybe<Scalars['String']>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  publishedBy?: InputMaybe<UserWhereInput>;\n  scheduledIn_every?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_none?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_some?: InputMaybe<ScheduledOperationWhereInput>;\n  seoImage_every?: InputMaybe<SeoWhereInput>;\n  seoImage_none?: InputMaybe<SeoWhereInput>;\n  seoImage_some?: InputMaybe<SeoWhereInput>;\n  size?: InputMaybe<Scalars['Float']>;\n  /** All values greater than the given value. */\n  size_gt?: InputMaybe<Scalars['Float']>;\n  /** All values greater than or equal the given value. */\n  size_gte?: InputMaybe<Scalars['Float']>;\n  /** All values that are contained in given list. */\n  size_in?: InputMaybe<Array<Scalars['Float']>>;\n  /** All values less than the given value. */\n  size_lt?: InputMaybe<Scalars['Float']>;\n  /** All values less than or equal the given value. */\n  size_lte?: InputMaybe<Scalars['Float']>;\n  /** All values that are not equal to given value. */\n  size_not?: InputMaybe<Scalars['Float']>;\n  /** All values that are not contained in given list. */\n  size_not_in?: InputMaybe<Array<Scalars['Float']>>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedBy?: InputMaybe<UserWhereInput>;\n  width?: InputMaybe<Scalars['Float']>;\n  /** All values greater than the given value. */\n  width_gt?: InputMaybe<Scalars['Float']>;\n  /** All values greater than or equal the given value. */\n  width_gte?: InputMaybe<Scalars['Float']>;\n  /** All values that are contained in given list. */\n  width_in?: InputMaybe<Array<Scalars['Float']>>;\n  /** All values less than the given value. */\n  width_lt?: InputMaybe<Scalars['Float']>;\n  /** All values less than or equal the given value. */\n  width_lte?: InputMaybe<Scalars['Float']>;\n  /** All values that are not equal to given value. */\n  width_not?: InputMaybe<Scalars['Float']>;\n  /** All values that are not contained in given list. */\n  width_not_in?: InputMaybe<Array<Scalars['Float']>>;\n};\n\n/** References Asset record uniquely */\nexport type AssetWhereUniqueInput = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\nexport type Author = Node & {\n  __typename?: 'Author';\n  /** Enter a short bio about yourself, or other authors. */\n  biography?: Maybe<Scalars['String']>;\n  /** The time the document was created */\n  createdAt: Scalars['DateTime'];\n  /** User that created this document */\n  createdBy?: Maybe<User>;\n  /** Get the document in other stages */\n  documentInStages: Array<Author>;\n  /** List of Author versions */\n  history: Array<Version>;\n  /** The unique identifier */\n  id: Scalars['ID'];\n  /** Enter the display name for authors */\n  name: Scalars['String'];\n  /** Add a profile picture for authors */\n  picture?: Maybe<Asset>;\n  /** Connect blog posts to this author */\n  posts: Array<Post>;\n  /** The time the document was published. Null on documents in draft stage. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** User that last published this document */\n  publishedBy?: Maybe<User>;\n  scheduledIn: Array<ScheduledOperation>;\n  /** System stage field */\n  stage: Stage;\n  /** Enter the job title of the author */\n  title?: Maybe<Scalars['String']>;\n  twitterHandle?: Maybe<Scalars['String']>;\n  /** The time the document was updated */\n  updatedAt: Scalars['DateTime'];\n  /** User that last updated this document */\n  updatedBy?: Maybe<User>;\n};\n\n\nexport type AuthorCreatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type AuthorDocumentInStagesArgs = {\n  includeCurrent?: Scalars['Boolean'];\n  inheritLocale?: Scalars['Boolean'];\n  stages?: Array<Stage>;\n};\n\n\nexport type AuthorHistoryArgs = {\n  limit?: Scalars['Int'];\n  skip?: Scalars['Int'];\n  stageOverride?: InputMaybe<Stage>;\n};\n\n\nexport type AuthorPictureArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type AuthorPostsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  orderBy?: InputMaybe<PostOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PostWhereInput>;\n};\n\n\nexport type AuthorPublishedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type AuthorScheduledInArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<ScheduledOperationWhereInput>;\n};\n\n\nexport type AuthorUpdatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\nexport type AuthorConnectInput = {\n  /** Allow to specify document position in list of connected documents, will default to appending at end of list */\n  position?: InputMaybe<ConnectPositionInput>;\n  /** Document to connect */\n  where: AuthorWhereUniqueInput;\n};\n\n/** A connection to a list of items. */\nexport type AuthorConnection = {\n  __typename?: 'AuthorConnection';\n  aggregate: Aggregate;\n  /** A list of edges. */\n  edges: Array<AuthorEdge>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\nexport type AuthorCreateInput = {\n  biography?: InputMaybe<Scalars['String']>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  name: Scalars['String'];\n  picture?: InputMaybe<AssetCreateOneInlineInput>;\n  posts?: InputMaybe<PostCreateManyInlineInput>;\n  title?: InputMaybe<Scalars['String']>;\n  twitterHandle?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n};\n\nexport type AuthorCreateManyInlineInput = {\n  /** Connect multiple existing Author documents */\n  connect?: InputMaybe<Array<AuthorWhereUniqueInput>>;\n  /** Create and connect multiple existing Author documents */\n  create?: InputMaybe<Array<AuthorCreateInput>>;\n};\n\nexport type AuthorCreateOneInlineInput = {\n  /** Connect one existing Author document */\n  connect?: InputMaybe<AuthorWhereUniqueInput>;\n  /** Create and connect one Author document */\n  create?: InputMaybe<AuthorCreateInput>;\n};\n\n/** An edge in a connection. */\nexport type AuthorEdge = {\n  __typename?: 'AuthorEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node: Author;\n};\n\n/** Identifies documents */\nexport type AuthorManyWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<AuthorWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<AuthorWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<AuthorWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  biography?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  biography_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  biography_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  biography_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  biography_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  biography_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  biography_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  biography_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  biography_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  biography_starts_with?: InputMaybe<Scalars['String']>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdBy?: InputMaybe<UserWhereInput>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  name?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  name_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  name_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  name_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  name_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  name_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  name_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  name_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  name_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  name_starts_with?: InputMaybe<Scalars['String']>;\n  picture?: InputMaybe<AssetWhereInput>;\n  posts_every?: InputMaybe<PostWhereInput>;\n  posts_none?: InputMaybe<PostWhereInput>;\n  posts_some?: InputMaybe<PostWhereInput>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  publishedBy?: InputMaybe<UserWhereInput>;\n  scheduledIn_every?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_none?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_some?: InputMaybe<ScheduledOperationWhereInput>;\n  title?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  title_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  title_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  title_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  title_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  title_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  title_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  title_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  title_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  title_starts_with?: InputMaybe<Scalars['String']>;\n  twitterHandle?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  twitterHandle_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  twitterHandle_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  twitterHandle_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  twitterHandle_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  twitterHandle_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  twitterHandle_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  twitterHandle_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  twitterHandle_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  twitterHandle_starts_with?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedBy?: InputMaybe<UserWhereInput>;\n};\n\nexport enum AuthorOrderByInput {\n  BiographyAsc = 'biography_ASC',\n  BiographyDesc = 'biography_DESC',\n  CreatedAtAsc = 'createdAt_ASC',\n  CreatedAtDesc = 'createdAt_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  NameAsc = 'name_ASC',\n  NameDesc = 'name_DESC',\n  PublishedAtAsc = 'publishedAt_ASC',\n  PublishedAtDesc = 'publishedAt_DESC',\n  TitleAsc = 'title_ASC',\n  TitleDesc = 'title_DESC',\n  TwitterHandleAsc = 'twitterHandle_ASC',\n  TwitterHandleDesc = 'twitterHandle_DESC',\n  UpdatedAtAsc = 'updatedAt_ASC',\n  UpdatedAtDesc = 'updatedAt_DESC'\n}\n\nexport type AuthorUpdateInput = {\n  biography?: InputMaybe<Scalars['String']>;\n  name?: InputMaybe<Scalars['String']>;\n  picture?: InputMaybe<AssetUpdateOneInlineInput>;\n  posts?: InputMaybe<PostUpdateManyInlineInput>;\n  title?: InputMaybe<Scalars['String']>;\n  twitterHandle?: InputMaybe<Scalars['String']>;\n};\n\nexport type AuthorUpdateManyInlineInput = {\n  /** Connect multiple existing Author documents */\n  connect?: InputMaybe<Array<AuthorConnectInput>>;\n  /** Create and connect multiple Author documents */\n  create?: InputMaybe<Array<AuthorCreateInput>>;\n  /** Delete multiple Author documents */\n  delete?: InputMaybe<Array<AuthorWhereUniqueInput>>;\n  /** Disconnect multiple Author documents */\n  disconnect?: InputMaybe<Array<AuthorWhereUniqueInput>>;\n  /** Override currently-connected documents with multiple existing Author documents */\n  set?: InputMaybe<Array<AuthorWhereUniqueInput>>;\n  /** Update multiple Author documents */\n  update?: InputMaybe<Array<AuthorUpdateWithNestedWhereUniqueInput>>;\n  /** Upsert multiple Author documents */\n  upsert?: InputMaybe<Array<AuthorUpsertWithNestedWhereUniqueInput>>;\n};\n\nexport type AuthorUpdateManyInput = {\n  biography?: InputMaybe<Scalars['String']>;\n  name?: InputMaybe<Scalars['String']>;\n  title?: InputMaybe<Scalars['String']>;\n  twitterHandle?: InputMaybe<Scalars['String']>;\n};\n\nexport type AuthorUpdateOneInlineInput = {\n  /** Connect existing Author document */\n  connect?: InputMaybe<AuthorWhereUniqueInput>;\n  /** Create and connect one Author document */\n  create?: InputMaybe<AuthorCreateInput>;\n  /** Delete currently connected Author document */\n  delete?: InputMaybe<Scalars['Boolean']>;\n  /** Disconnect currently connected Author document */\n  disconnect?: InputMaybe<Scalars['Boolean']>;\n  /** Update single Author document */\n  update?: InputMaybe<AuthorUpdateWithNestedWhereUniqueInput>;\n  /** Upsert single Author document */\n  upsert?: InputMaybe<AuthorUpsertWithNestedWhereUniqueInput>;\n};\n\nexport type AuthorUpdateWithNestedWhereUniqueInput = {\n  /** Document to update */\n  data: AuthorUpdateInput;\n  /** Unique document search */\n  where: AuthorWhereUniqueInput;\n};\n\nexport type AuthorUpsertInput = {\n  /** Create document if it didn't exist */\n  create: AuthorCreateInput;\n  /** Update document if it exists */\n  update: AuthorUpdateInput;\n};\n\nexport type AuthorUpsertWithNestedWhereUniqueInput = {\n  /** Upsert data */\n  data: AuthorUpsertInput;\n  /** Unique document search */\n  where: AuthorWhereUniqueInput;\n};\n\n/** Identifies documents */\nexport type AuthorWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<AuthorWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<AuthorWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<AuthorWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  biography?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  biography_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  biography_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  biography_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  biography_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  biography_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  biography_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  biography_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  biography_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  biography_starts_with?: InputMaybe<Scalars['String']>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdBy?: InputMaybe<UserWhereInput>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  name?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  name_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  name_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  name_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  name_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  name_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  name_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  name_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  name_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  name_starts_with?: InputMaybe<Scalars['String']>;\n  picture?: InputMaybe<AssetWhereInput>;\n  posts_every?: InputMaybe<PostWhereInput>;\n  posts_none?: InputMaybe<PostWhereInput>;\n  posts_some?: InputMaybe<PostWhereInput>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  publishedBy?: InputMaybe<UserWhereInput>;\n  scheduledIn_every?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_none?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_some?: InputMaybe<ScheduledOperationWhereInput>;\n  title?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  title_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  title_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  title_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  title_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  title_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  title_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  title_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  title_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  title_starts_with?: InputMaybe<Scalars['String']>;\n  twitterHandle?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  twitterHandle_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  twitterHandle_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  twitterHandle_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  twitterHandle_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  twitterHandle_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  twitterHandle_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  twitterHandle_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  twitterHandle_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  twitterHandle_starts_with?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedBy?: InputMaybe<UserWhereInput>;\n};\n\n/** References Author record uniquely */\nexport type AuthorWhereUniqueInput = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\nexport type BatchPayload = {\n  __typename?: 'BatchPayload';\n  /** The number of nodes that have been affected by the Batch operation. */\n  count: Scalars['Long'];\n};\n\nexport type BlogCategory = Node & {\n  __typename?: 'BlogCategory';\n  /** The time the document was created */\n  createdAt: Scalars['DateTime'];\n  /** User that created this document */\n  createdBy?: Maybe<User>;\n  description?: Maybe<RichText>;\n  /** Get the document in other stages */\n  documentInStages: Array<BlogCategory>;\n  /** List of BlogCategory versions */\n  history: Array<Version>;\n  /** The unique identifier */\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  posts: Array<Post>;\n  /** The time the document was published. Null on documents in draft stage. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** User that last published this document */\n  publishedBy?: Maybe<User>;\n  scheduledIn: Array<ScheduledOperation>;\n  slug: Scalars['String'];\n  /** System stage field */\n  stage: Stage;\n  /** The time the document was updated */\n  updatedAt: Scalars['DateTime'];\n  /** User that last updated this document */\n  updatedBy?: Maybe<User>;\n};\n\n\nexport type BlogCategoryCreatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type BlogCategoryDocumentInStagesArgs = {\n  includeCurrent?: Scalars['Boolean'];\n  inheritLocale?: Scalars['Boolean'];\n  stages?: Array<Stage>;\n};\n\n\nexport type BlogCategoryHistoryArgs = {\n  limit?: Scalars['Int'];\n  skip?: Scalars['Int'];\n  stageOverride?: InputMaybe<Stage>;\n};\n\n\nexport type BlogCategoryPostsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  orderBy?: InputMaybe<PostOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PostWhereInput>;\n};\n\n\nexport type BlogCategoryPublishedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type BlogCategoryScheduledInArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<ScheduledOperationWhereInput>;\n};\n\n\nexport type BlogCategoryUpdatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\nexport type BlogCategoryConnectInput = {\n  /** Allow to specify document position in list of connected documents, will default to appending at end of list */\n  position?: InputMaybe<ConnectPositionInput>;\n  /** Document to connect */\n  where: BlogCategoryWhereUniqueInput;\n};\n\n/** A connection to a list of items. */\nexport type BlogCategoryConnection = {\n  __typename?: 'BlogCategoryConnection';\n  aggregate: Aggregate;\n  /** A list of edges. */\n  edges: Array<BlogCategoryEdge>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\nexport type BlogCategoryCreateInput = {\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  description?: InputMaybe<Scalars['RichTextAST']>;\n  name: Scalars['String'];\n  posts?: InputMaybe<PostCreateManyInlineInput>;\n  slug: Scalars['String'];\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n};\n\nexport type BlogCategoryCreateManyInlineInput = {\n  /** Connect multiple existing BlogCategory documents */\n  connect?: InputMaybe<Array<BlogCategoryWhereUniqueInput>>;\n  /** Create and connect multiple existing BlogCategory documents */\n  create?: InputMaybe<Array<BlogCategoryCreateInput>>;\n};\n\n/** An edge in a connection. */\nexport type BlogCategoryEdge = {\n  __typename?: 'BlogCategoryEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node: BlogCategory;\n};\n\n/** Identifies documents */\nexport type BlogCategoryManyWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<BlogCategoryWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<BlogCategoryWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<BlogCategoryWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdBy?: InputMaybe<UserWhereInput>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  name?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  name_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  name_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  name_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  name_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  name_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  name_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  name_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  name_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  name_starts_with?: InputMaybe<Scalars['String']>;\n  posts_every?: InputMaybe<PostWhereInput>;\n  posts_none?: InputMaybe<PostWhereInput>;\n  posts_some?: InputMaybe<PostWhereInput>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  publishedBy?: InputMaybe<UserWhereInput>;\n  scheduledIn_every?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_none?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_some?: InputMaybe<ScheduledOperationWhereInput>;\n  slug?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  slug_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  slug_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  slug_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  slug_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  slug_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  slug_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  slug_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  slug_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  slug_starts_with?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedBy?: InputMaybe<UserWhereInput>;\n};\n\nexport enum BlogCategoryOrderByInput {\n  CreatedAtAsc = 'createdAt_ASC',\n  CreatedAtDesc = 'createdAt_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  NameAsc = 'name_ASC',\n  NameDesc = 'name_DESC',\n  PublishedAtAsc = 'publishedAt_ASC',\n  PublishedAtDesc = 'publishedAt_DESC',\n  SlugAsc = 'slug_ASC',\n  SlugDesc = 'slug_DESC',\n  UpdatedAtAsc = 'updatedAt_ASC',\n  UpdatedAtDesc = 'updatedAt_DESC'\n}\n\nexport type BlogCategoryUpdateInput = {\n  description?: InputMaybe<Scalars['RichTextAST']>;\n  name?: InputMaybe<Scalars['String']>;\n  posts?: InputMaybe<PostUpdateManyInlineInput>;\n  slug?: InputMaybe<Scalars['String']>;\n};\n\nexport type BlogCategoryUpdateManyInlineInput = {\n  /** Connect multiple existing BlogCategory documents */\n  connect?: InputMaybe<Array<BlogCategoryConnectInput>>;\n  /** Create and connect multiple BlogCategory documents */\n  create?: InputMaybe<Array<BlogCategoryCreateInput>>;\n  /** Delete multiple BlogCategory documents */\n  delete?: InputMaybe<Array<BlogCategoryWhereUniqueInput>>;\n  /** Disconnect multiple BlogCategory documents */\n  disconnect?: InputMaybe<Array<BlogCategoryWhereUniqueInput>>;\n  /** Override currently-connected documents with multiple existing BlogCategory documents */\n  set?: InputMaybe<Array<BlogCategoryWhereUniqueInput>>;\n  /** Update multiple BlogCategory documents */\n  update?: InputMaybe<Array<BlogCategoryUpdateWithNestedWhereUniqueInput>>;\n  /** Upsert multiple BlogCategory documents */\n  upsert?: InputMaybe<Array<BlogCategoryUpsertWithNestedWhereUniqueInput>>;\n};\n\nexport type BlogCategoryUpdateManyInput = {\n  description?: InputMaybe<Scalars['RichTextAST']>;\n};\n\nexport type BlogCategoryUpdateWithNestedWhereUniqueInput = {\n  /** Document to update */\n  data: BlogCategoryUpdateInput;\n  /** Unique document search */\n  where: BlogCategoryWhereUniqueInput;\n};\n\nexport type BlogCategoryUpsertInput = {\n  /** Create document if it didn't exist */\n  create: BlogCategoryCreateInput;\n  /** Update document if it exists */\n  update: BlogCategoryUpdateInput;\n};\n\nexport type BlogCategoryUpsertWithNestedWhereUniqueInput = {\n  /** Upsert data */\n  data: BlogCategoryUpsertInput;\n  /** Unique document search */\n  where: BlogCategoryWhereUniqueInput;\n};\n\n/** Identifies documents */\nexport type BlogCategoryWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<BlogCategoryWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<BlogCategoryWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<BlogCategoryWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdBy?: InputMaybe<UserWhereInput>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  name?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  name_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  name_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  name_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  name_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  name_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  name_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  name_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  name_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  name_starts_with?: InputMaybe<Scalars['String']>;\n  posts_every?: InputMaybe<PostWhereInput>;\n  posts_none?: InputMaybe<PostWhereInput>;\n  posts_some?: InputMaybe<PostWhereInput>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  publishedBy?: InputMaybe<UserWhereInput>;\n  scheduledIn_every?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_none?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_some?: InputMaybe<ScheduledOperationWhereInput>;\n  slug?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  slug_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  slug_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  slug_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  slug_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  slug_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  slug_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  slug_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  slug_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  slug_starts_with?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedBy?: InputMaybe<UserWhereInput>;\n};\n\n/** References BlogCategory record uniquely */\nexport type BlogCategoryWhereUniqueInput = {\n  id?: InputMaybe<Scalars['ID']>;\n  name?: InputMaybe<Scalars['String']>;\n  slug?: InputMaybe<Scalars['String']>;\n};\n\nexport type ConnectPositionInput = {\n  /** Connect document after specified document */\n  after?: InputMaybe<Scalars['ID']>;\n  /** Connect document before specified document */\n  before?: InputMaybe<Scalars['ID']>;\n  /** Connect document at last position */\n  end?: InputMaybe<Scalars['Boolean']>;\n  /** Connect document at first position */\n  start?: InputMaybe<Scalars['Boolean']>;\n};\n\nexport enum DocumentFileTypes {\n  Doc = 'doc',\n  Docx = 'docx',\n  Html = 'html',\n  Jpg = 'jpg',\n  Odp = 'odp',\n  Ods = 'ods',\n  Odt = 'odt',\n  Pdf = 'pdf',\n  Png = 'png',\n  Ppt = 'ppt',\n  Pptx = 'pptx',\n  Svg = 'svg',\n  Txt = 'txt',\n  Webp = 'webp',\n  Xls = 'xls',\n  Xlsx = 'xlsx'\n}\n\nexport type DocumentOutputInput = {\n  /**\n   * Transforms a document into a desired file type.\n   * See this matrix for format support:\n   *\n   * PDF:\tjpg, odp, ods, odt, png, svg, txt, and webp\n   * DOC:\tdocx, html, jpg, odt, pdf, png, svg, txt, and webp\n   * DOCX:\tdoc, html, jpg, odt, pdf, png, svg, txt, and webp\n   * ODT:\tdoc, docx, html, jpg, pdf, png, svg, txt, and webp\n   * XLS:\tjpg, pdf, ods, png, svg, xlsx, and webp\n   * XLSX:\tjpg, pdf, ods, png, svg, xls, and webp\n   * ODS:\tjpg, pdf, png, xls, svg, xlsx, and webp\n   * PPT:\tjpg, odp, pdf, png, svg, pptx, and webp\n   * PPTX:\tjpg, odp, pdf, png, svg, ppt, and webp\n   * ODP:\tjpg, pdf, png, ppt, svg, pptx, and webp\n   * BMP:\tjpg, odp, ods, odt, pdf, png, svg, and webp\n   * GIF:\tjpg, odp, ods, odt, pdf, png, svg, and webp\n   * JPG:\tjpg, odp, ods, odt, pdf, png, svg, and webp\n   * PNG:\tjpg, odp, ods, odt, pdf, png, svg, and webp\n   * WEBP:\tjpg, odp, ods, odt, pdf, png, svg, and webp\n   * TIFF:\tjpg, odp, ods, odt, pdf, png, svg, and webp\n   * AI:\t    jpg, odp, ods, odt, pdf, png, svg, and webp\n   * PSD:\tjpg, odp, ods, odt, pdf, png, svg, and webp\n   * SVG:\tjpg, odp, ods, odt, pdf, png, and webp\n   * HTML:\tjpg, odt, pdf, svg, txt, and webp\n   * TXT:\tjpg, html, odt, pdf, svg, and webp\n   */\n  format?: InputMaybe<DocumentFileTypes>;\n};\n\n/** Transformations for Documents */\nexport type DocumentTransformationInput = {\n  /** Changes the output for the file. */\n  output?: InputMaybe<DocumentOutputInput>;\n};\n\nexport type DocumentVersion = {\n  __typename?: 'DocumentVersion';\n  createdAt: Scalars['DateTime'];\n  data?: Maybe<Scalars['Json']>;\n  id: Scalars['ID'];\n  revision: Scalars['Int'];\n  stage: Stage;\n};\n\nexport enum ImageFit {\n  /** Resizes the image to fit within the specified parameters without distorting, cropping, or changing the aspect ratio. */\n  Clip = 'clip',\n  /** Resizes the image to fit the specified parameters exactly by removing any parts of the image that don't fit within the boundaries. */\n  Crop = 'crop',\n  /** Resizes the image to fit within the parameters, but as opposed to 'fit:clip' will not scale the image if the image is smaller than the output size. */\n  Max = 'max',\n  /** Resizes the image to fit the specified parameters exactly by scaling the image to the desired size. The aspect ratio of the image is not respected and the image can be distorted using this method. */\n  Scale = 'scale'\n}\n\nexport type ImageResizeInput = {\n  /** The default value for the fit parameter is fit:clip. */\n  fit?: InputMaybe<ImageFit>;\n  /** The height in pixels to resize the image to. The value must be an integer from 1 to 10000. */\n  height?: InputMaybe<Scalars['Int']>;\n  /** The width in pixels to resize the image to. The value must be an integer from 1 to 10000. */\n  width?: InputMaybe<Scalars['Int']>;\n};\n\n/** Transformations for Images */\nexport type ImageTransformationInput = {\n  /** Resizes the image */\n  resize?: InputMaybe<ImageResizeInput>;\n};\n\n/** Locale system enumeration */\nexport enum Locale {\n  /** System locale */\n  En = 'en'\n}\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  /** Create one asset */\n  createAsset?: Maybe<Asset>;\n  /** Create one author */\n  createAuthor?: Maybe<Author>;\n  /** Create one blogCategory */\n  createBlogCategory?: Maybe<BlogCategory>;\n  /** Create one navigationLink */\n  createNavigationLink?: Maybe<NavigationLink>;\n  /** Create one page */\n  createPage?: Maybe<Page>;\n  /** Create one post */\n  createPost?: Maybe<Post>;\n  /** Create one scheduledRelease */\n  createScheduledRelease?: Maybe<ScheduledRelease>;\n  /** Create one seo */\n  createSeo?: Maybe<Seo>;\n  /** Create one showcaseCard */\n  createShowcaseCard?: Maybe<ShowcaseCard>;\n  /** Delete one asset from _all_ existing stages. Returns deleted document. */\n  deleteAsset?: Maybe<Asset>;\n  /** Delete one author from _all_ existing stages. Returns deleted document. */\n  deleteAuthor?: Maybe<Author>;\n  /** Delete one blogCategory from _all_ existing stages. Returns deleted document. */\n  deleteBlogCategory?: Maybe<BlogCategory>;\n  /** Delete many Asset documents */\n  deleteManyAssets: BatchPayload;\n  /** Delete many Asset documents, return deleted documents */\n  deleteManyAssetsConnection: AssetConnection;\n  /** Delete many Author documents */\n  deleteManyAuthors: BatchPayload;\n  /** Delete many Author documents, return deleted documents */\n  deleteManyAuthorsConnection: AuthorConnection;\n  /** Delete many BlogCategory documents */\n  deleteManyBlogCategories: BatchPayload;\n  /** Delete many BlogCategory documents, return deleted documents */\n  deleteManyBlogCategoriesConnection: BlogCategoryConnection;\n  /** Delete many NavigationLink documents */\n  deleteManyNavigationLinks: BatchPayload;\n  /** Delete many NavigationLink documents, return deleted documents */\n  deleteManyNavigationLinksConnection: NavigationLinkConnection;\n  /** Delete many Page documents */\n  deleteManyPages: BatchPayload;\n  /** Delete many Page documents, return deleted documents */\n  deleteManyPagesConnection: PageConnection;\n  /** Delete many Post documents */\n  deleteManyPosts: BatchPayload;\n  /** Delete many Post documents, return deleted documents */\n  deleteManyPostsConnection: PostConnection;\n  /** Delete many Seo documents */\n  deleteManySeos: BatchPayload;\n  /** Delete many Seo documents, return deleted documents */\n  deleteManySeosConnection: SeoConnection;\n  /** Delete many ShowcaseCard documents */\n  deleteManyShowcaseCards: BatchPayload;\n  /** Delete many ShowcaseCard documents, return deleted documents */\n  deleteManyShowcaseCardsConnection: ShowcaseCardConnection;\n  /** Delete one navigationLink from _all_ existing stages. Returns deleted document. */\n  deleteNavigationLink?: Maybe<NavigationLink>;\n  /** Delete one page from _all_ existing stages. Returns deleted document. */\n  deletePage?: Maybe<Page>;\n  /** Delete one post from _all_ existing stages. Returns deleted document. */\n  deletePost?: Maybe<Post>;\n  /** Delete and return scheduled operation */\n  deleteScheduledOperation?: Maybe<ScheduledOperation>;\n  /** Delete one scheduledRelease from _all_ existing stages. Returns deleted document. */\n  deleteScheduledRelease?: Maybe<ScheduledRelease>;\n  /** Delete one seo from _all_ existing stages. Returns deleted document. */\n  deleteSeo?: Maybe<Seo>;\n  /** Delete one showcaseCard from _all_ existing stages. Returns deleted document. */\n  deleteShowcaseCard?: Maybe<ShowcaseCard>;\n  /** Publish one asset */\n  publishAsset?: Maybe<Asset>;\n  /** Publish one author */\n  publishAuthor?: Maybe<Author>;\n  /** Publish one blogCategory */\n  publishBlogCategory?: Maybe<BlogCategory>;\n  /** Publish many Asset documents */\n  publishManyAssets: BatchPayload;\n  /** Publish many Asset documents */\n  publishManyAssetsConnection: AssetConnection;\n  /** Publish many Author documents */\n  publishManyAuthors: BatchPayload;\n  /** Publish many Author documents */\n  publishManyAuthorsConnection: AuthorConnection;\n  /** Publish many BlogCategory documents */\n  publishManyBlogCategories: BatchPayload;\n  /** Publish many BlogCategory documents */\n  publishManyBlogCategoriesConnection: BlogCategoryConnection;\n  /** Publish many NavigationLink documents */\n  publishManyNavigationLinks: BatchPayload;\n  /** Publish many NavigationLink documents */\n  publishManyNavigationLinksConnection: NavigationLinkConnection;\n  /** Publish many Page documents */\n  publishManyPages: BatchPayload;\n  /** Publish many Page documents */\n  publishManyPagesConnection: PageConnection;\n  /** Publish many Post documents */\n  publishManyPosts: BatchPayload;\n  /** Publish many Post documents */\n  publishManyPostsConnection: PostConnection;\n  /** Publish many Seo documents */\n  publishManySeos: BatchPayload;\n  /** Publish many Seo documents */\n  publishManySeosConnection: SeoConnection;\n  /** Publish many ShowcaseCard documents */\n  publishManyShowcaseCards: BatchPayload;\n  /** Publish many ShowcaseCard documents */\n  publishManyShowcaseCardsConnection: ShowcaseCardConnection;\n  /** Publish one navigationLink */\n  publishNavigationLink?: Maybe<NavigationLink>;\n  /** Publish one page */\n  publishPage?: Maybe<Page>;\n  /** Publish one post */\n  publishPost?: Maybe<Post>;\n  /** Publish one seo */\n  publishSeo?: Maybe<Seo>;\n  /** Publish one showcaseCard */\n  publishShowcaseCard?: Maybe<ShowcaseCard>;\n  /** Schedule to publish one asset */\n  schedulePublishAsset?: Maybe<Asset>;\n  /** Schedule to publish one author */\n  schedulePublishAuthor?: Maybe<Author>;\n  /** Schedule to publish one blogCategory */\n  schedulePublishBlogCategory?: Maybe<BlogCategory>;\n  /** Schedule to publish one navigationLink */\n  schedulePublishNavigationLink?: Maybe<NavigationLink>;\n  /** Schedule to publish one page */\n  schedulePublishPage?: Maybe<Page>;\n  /** Schedule to publish one post */\n  schedulePublishPost?: Maybe<Post>;\n  /** Schedule to publish one seo */\n  schedulePublishSeo?: Maybe<Seo>;\n  /** Schedule to publish one showcaseCard */\n  schedulePublishShowcaseCard?: Maybe<ShowcaseCard>;\n  /** Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */\n  scheduleUnpublishAsset?: Maybe<Asset>;\n  /** Unpublish one author from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */\n  scheduleUnpublishAuthor?: Maybe<Author>;\n  /** Unpublish one blogCategory from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */\n  scheduleUnpublishBlogCategory?: Maybe<BlogCategory>;\n  /** Unpublish one navigationLink from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */\n  scheduleUnpublishNavigationLink?: Maybe<NavigationLink>;\n  /** Unpublish one page from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */\n  scheduleUnpublishPage?: Maybe<Page>;\n  /** Unpublish one post from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */\n  scheduleUnpublishPost?: Maybe<Post>;\n  /** Unpublish one seo from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */\n  scheduleUnpublishSeo?: Maybe<Seo>;\n  /** Unpublish one showcaseCard from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */\n  scheduleUnpublishShowcaseCard?: Maybe<ShowcaseCard>;\n  /** Unpublish one asset from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */\n  unpublishAsset?: Maybe<Asset>;\n  /** Unpublish one author from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */\n  unpublishAuthor?: Maybe<Author>;\n  /** Unpublish one blogCategory from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */\n  unpublishBlogCategory?: Maybe<BlogCategory>;\n  /** Unpublish many Asset documents */\n  unpublishManyAssets: BatchPayload;\n  /** Find many Asset documents that match criteria in specified stage and unpublish from target stages */\n  unpublishManyAssetsConnection: AssetConnection;\n  /** Unpublish many Author documents */\n  unpublishManyAuthors: BatchPayload;\n  /** Find many Author documents that match criteria in specified stage and unpublish from target stages */\n  unpublishManyAuthorsConnection: AuthorConnection;\n  /** Unpublish many BlogCategory documents */\n  unpublishManyBlogCategories: BatchPayload;\n  /** Find many BlogCategory documents that match criteria in specified stage and unpublish from target stages */\n  unpublishManyBlogCategoriesConnection: BlogCategoryConnection;\n  /** Unpublish many NavigationLink documents */\n  unpublishManyNavigationLinks: BatchPayload;\n  /** Find many NavigationLink documents that match criteria in specified stage and unpublish from target stages */\n  unpublishManyNavigationLinksConnection: NavigationLinkConnection;\n  /** Unpublish many Page documents */\n  unpublishManyPages: BatchPayload;\n  /** Find many Page documents that match criteria in specified stage and unpublish from target stages */\n  unpublishManyPagesConnection: PageConnection;\n  /** Unpublish many Post documents */\n  unpublishManyPosts: BatchPayload;\n  /** Find many Post documents that match criteria in specified stage and unpublish from target stages */\n  unpublishManyPostsConnection: PostConnection;\n  /** Unpublish many Seo documents */\n  unpublishManySeos: BatchPayload;\n  /** Find many Seo documents that match criteria in specified stage and unpublish from target stages */\n  unpublishManySeosConnection: SeoConnection;\n  /** Unpublish many ShowcaseCard documents */\n  unpublishManyShowcaseCards: BatchPayload;\n  /** Find many ShowcaseCard documents that match criteria in specified stage and unpublish from target stages */\n  unpublishManyShowcaseCardsConnection: ShowcaseCardConnection;\n  /** Unpublish one navigationLink from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */\n  unpublishNavigationLink?: Maybe<NavigationLink>;\n  /** Unpublish one page from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */\n  unpublishPage?: Maybe<Page>;\n  /** Unpublish one post from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */\n  unpublishPost?: Maybe<Post>;\n  /** Unpublish one seo from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */\n  unpublishSeo?: Maybe<Seo>;\n  /** Unpublish one showcaseCard from selected stages. Unpublish either the complete document with its relations, localizations and base data or specific localizations only. */\n  unpublishShowcaseCard?: Maybe<ShowcaseCard>;\n  /** Update one asset */\n  updateAsset?: Maybe<Asset>;\n  /** Update one author */\n  updateAuthor?: Maybe<Author>;\n  /** Update one blogCategory */\n  updateBlogCategory?: Maybe<BlogCategory>;\n  /** Update many assets */\n  updateManyAssets: BatchPayload;\n  /** Update many Asset documents */\n  updateManyAssetsConnection: AssetConnection;\n  /** Update many authors */\n  updateManyAuthors: BatchPayload;\n  /** Update many Author documents */\n  updateManyAuthorsConnection: AuthorConnection;\n  /** Update many blogCategories */\n  updateManyBlogCategories: BatchPayload;\n  /** Update many BlogCategory documents */\n  updateManyBlogCategoriesConnection: BlogCategoryConnection;\n  /** Update many navigationLinks */\n  updateManyNavigationLinks: BatchPayload;\n  /** Update many NavigationLink documents */\n  updateManyNavigationLinksConnection: NavigationLinkConnection;\n  /** Update many pages */\n  updateManyPages: BatchPayload;\n  /** Update many Page documents */\n  updateManyPagesConnection: PageConnection;\n  /** Update many posts */\n  updateManyPosts: BatchPayload;\n  /** Update many Post documents */\n  updateManyPostsConnection: PostConnection;\n  /** Update many seos */\n  updateManySeos: BatchPayload;\n  /** Update many Seo documents */\n  updateManySeosConnection: SeoConnection;\n  /** Update many showcaseCards */\n  updateManyShowcaseCards: BatchPayload;\n  /** Update many ShowcaseCard documents */\n  updateManyShowcaseCardsConnection: ShowcaseCardConnection;\n  /** Update one navigationLink */\n  updateNavigationLink?: Maybe<NavigationLink>;\n  /** Update one page */\n  updatePage?: Maybe<Page>;\n  /** Update one post */\n  updatePost?: Maybe<Post>;\n  /** Update one scheduledRelease */\n  updateScheduledRelease?: Maybe<ScheduledRelease>;\n  /** Update one seo */\n  updateSeo?: Maybe<Seo>;\n  /** Update one showcaseCard */\n  updateShowcaseCard?: Maybe<ShowcaseCard>;\n  /** Upsert one asset */\n  upsertAsset?: Maybe<Asset>;\n  /** Upsert one author */\n  upsertAuthor?: Maybe<Author>;\n  /** Upsert one blogCategory */\n  upsertBlogCategory?: Maybe<BlogCategory>;\n  /** Upsert one navigationLink */\n  upsertNavigationLink?: Maybe<NavigationLink>;\n  /** Upsert one page */\n  upsertPage?: Maybe<Page>;\n  /** Upsert one post */\n  upsertPost?: Maybe<Post>;\n  /** Upsert one seo */\n  upsertSeo?: Maybe<Seo>;\n  /** Upsert one showcaseCard */\n  upsertShowcaseCard?: Maybe<ShowcaseCard>;\n};\n\n\nexport type MutationCreateAssetArgs = {\n  data: AssetCreateInput;\n};\n\n\nexport type MutationCreateAuthorArgs = {\n  data: AuthorCreateInput;\n};\n\n\nexport type MutationCreateBlogCategoryArgs = {\n  data: BlogCategoryCreateInput;\n};\n\n\nexport type MutationCreateNavigationLinkArgs = {\n  data: NavigationLinkCreateInput;\n};\n\n\nexport type MutationCreatePageArgs = {\n  data: PageCreateInput;\n};\n\n\nexport type MutationCreatePostArgs = {\n  data: PostCreateInput;\n};\n\n\nexport type MutationCreateScheduledReleaseArgs = {\n  data: ScheduledReleaseCreateInput;\n};\n\n\nexport type MutationCreateSeoArgs = {\n  data: SeoCreateInput;\n};\n\n\nexport type MutationCreateShowcaseCardArgs = {\n  data: ShowcaseCardCreateInput;\n};\n\n\nexport type MutationDeleteAssetArgs = {\n  where: AssetWhereUniqueInput;\n};\n\n\nexport type MutationDeleteAuthorArgs = {\n  where: AuthorWhereUniqueInput;\n};\n\n\nexport type MutationDeleteBlogCategoryArgs = {\n  where: BlogCategoryWhereUniqueInput;\n};\n\n\nexport type MutationDeleteManyAssetsArgs = {\n  where?: InputMaybe<AssetManyWhereInput>;\n};\n\n\nexport type MutationDeleteManyAssetsConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<AssetManyWhereInput>;\n};\n\n\nexport type MutationDeleteManyAuthorsArgs = {\n  where?: InputMaybe<AuthorManyWhereInput>;\n};\n\n\nexport type MutationDeleteManyAuthorsConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<AuthorManyWhereInput>;\n};\n\n\nexport type MutationDeleteManyBlogCategoriesArgs = {\n  where?: InputMaybe<BlogCategoryManyWhereInput>;\n};\n\n\nexport type MutationDeleteManyBlogCategoriesConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<BlogCategoryManyWhereInput>;\n};\n\n\nexport type MutationDeleteManyNavigationLinksArgs = {\n  where?: InputMaybe<NavigationLinkManyWhereInput>;\n};\n\n\nexport type MutationDeleteManyNavigationLinksConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<NavigationLinkManyWhereInput>;\n};\n\n\nexport type MutationDeleteManyPagesArgs = {\n  where?: InputMaybe<PageManyWhereInput>;\n};\n\n\nexport type MutationDeleteManyPagesConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PageManyWhereInput>;\n};\n\n\nexport type MutationDeleteManyPostsArgs = {\n  where?: InputMaybe<PostManyWhereInput>;\n};\n\n\nexport type MutationDeleteManyPostsConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PostManyWhereInput>;\n};\n\n\nexport type MutationDeleteManySeosArgs = {\n  where?: InputMaybe<SeoManyWhereInput>;\n};\n\n\nexport type MutationDeleteManySeosConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<SeoManyWhereInput>;\n};\n\n\nexport type MutationDeleteManyShowcaseCardsArgs = {\n  where?: InputMaybe<ShowcaseCardManyWhereInput>;\n};\n\n\nexport type MutationDeleteManyShowcaseCardsConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<ShowcaseCardManyWhereInput>;\n};\n\n\nexport type MutationDeleteNavigationLinkArgs = {\n  where: NavigationLinkWhereUniqueInput;\n};\n\n\nexport type MutationDeletePageArgs = {\n  where: PageWhereUniqueInput;\n};\n\n\nexport type MutationDeletePostArgs = {\n  where: PostWhereUniqueInput;\n};\n\n\nexport type MutationDeleteScheduledOperationArgs = {\n  where: ScheduledOperationWhereUniqueInput;\n};\n\n\nexport type MutationDeleteScheduledReleaseArgs = {\n  where: ScheduledReleaseWhereUniqueInput;\n};\n\n\nexport type MutationDeleteSeoArgs = {\n  where: SeoWhereUniqueInput;\n};\n\n\nexport type MutationDeleteShowcaseCardArgs = {\n  where: ShowcaseCardWhereUniqueInput;\n};\n\n\nexport type MutationPublishAssetArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n  publishBase?: InputMaybe<Scalars['Boolean']>;\n  to?: Array<Stage>;\n  where: AssetWhereUniqueInput;\n  withDefaultLocale?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationPublishAuthorArgs = {\n  to?: Array<Stage>;\n  where: AuthorWhereUniqueInput;\n};\n\n\nexport type MutationPublishBlogCategoryArgs = {\n  to?: Array<Stage>;\n  where: BlogCategoryWhereUniqueInput;\n};\n\n\nexport type MutationPublishManyAssetsArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n  publishBase?: InputMaybe<Scalars['Boolean']>;\n  to?: Array<Stage>;\n  where?: InputMaybe<AssetManyWhereInput>;\n  withDefaultLocale?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationPublishManyAssetsConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  from?: InputMaybe<Stage>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  publishBase?: InputMaybe<Scalars['Boolean']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  to?: Array<Stage>;\n  where?: InputMaybe<AssetManyWhereInput>;\n  withDefaultLocale?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationPublishManyAuthorsArgs = {\n  to?: Array<Stage>;\n  where?: InputMaybe<AuthorManyWhereInput>;\n};\n\n\nexport type MutationPublishManyAuthorsConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  from?: InputMaybe<Stage>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  to?: Array<Stage>;\n  where?: InputMaybe<AuthorManyWhereInput>;\n};\n\n\nexport type MutationPublishManyBlogCategoriesArgs = {\n  to?: Array<Stage>;\n  where?: InputMaybe<BlogCategoryManyWhereInput>;\n};\n\n\nexport type MutationPublishManyBlogCategoriesConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  from?: InputMaybe<Stage>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  to?: Array<Stage>;\n  where?: InputMaybe<BlogCategoryManyWhereInput>;\n};\n\n\nexport type MutationPublishManyNavigationLinksArgs = {\n  to?: Array<Stage>;\n  where?: InputMaybe<NavigationLinkManyWhereInput>;\n};\n\n\nexport type MutationPublishManyNavigationLinksConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  from?: InputMaybe<Stage>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  to?: Array<Stage>;\n  where?: InputMaybe<NavigationLinkManyWhereInput>;\n};\n\n\nexport type MutationPublishManyPagesArgs = {\n  to?: Array<Stage>;\n  where?: InputMaybe<PageManyWhereInput>;\n};\n\n\nexport type MutationPublishManyPagesConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  from?: InputMaybe<Stage>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  to?: Array<Stage>;\n  where?: InputMaybe<PageManyWhereInput>;\n};\n\n\nexport type MutationPublishManyPostsArgs = {\n  to?: Array<Stage>;\n  where?: InputMaybe<PostManyWhereInput>;\n};\n\n\nexport type MutationPublishManyPostsConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  from?: InputMaybe<Stage>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  to?: Array<Stage>;\n  where?: InputMaybe<PostManyWhereInput>;\n};\n\n\nexport type MutationPublishManySeosArgs = {\n  to?: Array<Stage>;\n  where?: InputMaybe<SeoManyWhereInput>;\n};\n\n\nexport type MutationPublishManySeosConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  from?: InputMaybe<Stage>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  to?: Array<Stage>;\n  where?: InputMaybe<SeoManyWhereInput>;\n};\n\n\nexport type MutationPublishManyShowcaseCardsArgs = {\n  to?: Array<Stage>;\n  where?: InputMaybe<ShowcaseCardManyWhereInput>;\n};\n\n\nexport type MutationPublishManyShowcaseCardsConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  from?: InputMaybe<Stage>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  to?: Array<Stage>;\n  where?: InputMaybe<ShowcaseCardManyWhereInput>;\n};\n\n\nexport type MutationPublishNavigationLinkArgs = {\n  to?: Array<Stage>;\n  where: NavigationLinkWhereUniqueInput;\n};\n\n\nexport type MutationPublishPageArgs = {\n  to?: Array<Stage>;\n  where: PageWhereUniqueInput;\n};\n\n\nexport type MutationPublishPostArgs = {\n  to?: Array<Stage>;\n  where: PostWhereUniqueInput;\n};\n\n\nexport type MutationPublishSeoArgs = {\n  to?: Array<Stage>;\n  where: SeoWhereUniqueInput;\n};\n\n\nexport type MutationPublishShowcaseCardArgs = {\n  to?: Array<Stage>;\n  where: ShowcaseCardWhereUniqueInput;\n};\n\n\nexport type MutationSchedulePublishAssetArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n  publishBase?: InputMaybe<Scalars['Boolean']>;\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  releaseId?: InputMaybe<Scalars['String']>;\n  to?: Array<Stage>;\n  where: AssetWhereUniqueInput;\n  withDefaultLocale?: InputMaybe<Scalars['Boolean']>;\n};\n\n\nexport type MutationSchedulePublishAuthorArgs = {\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  releaseId?: InputMaybe<Scalars['String']>;\n  to?: Array<Stage>;\n  where: AuthorWhereUniqueInput;\n};\n\n\nexport type MutationSchedulePublishBlogCategoryArgs = {\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  releaseId?: InputMaybe<Scalars['String']>;\n  to?: Array<Stage>;\n  where: BlogCategoryWhereUniqueInput;\n};\n\n\nexport type MutationSchedulePublishNavigationLinkArgs = {\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  releaseId?: InputMaybe<Scalars['String']>;\n  to?: Array<Stage>;\n  where: NavigationLinkWhereUniqueInput;\n};\n\n\nexport type MutationSchedulePublishPageArgs = {\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  releaseId?: InputMaybe<Scalars['String']>;\n  to?: Array<Stage>;\n  where: PageWhereUniqueInput;\n};\n\n\nexport type MutationSchedulePublishPostArgs = {\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  releaseId?: InputMaybe<Scalars['String']>;\n  to?: Array<Stage>;\n  where: PostWhereUniqueInput;\n};\n\n\nexport type MutationSchedulePublishSeoArgs = {\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  releaseId?: InputMaybe<Scalars['String']>;\n  to?: Array<Stage>;\n  where: SeoWhereUniqueInput;\n};\n\n\nexport type MutationSchedulePublishShowcaseCardArgs = {\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  releaseId?: InputMaybe<Scalars['String']>;\n  to?: Array<Stage>;\n  where: ShowcaseCardWhereUniqueInput;\n};\n\n\nexport type MutationScheduleUnpublishAssetArgs = {\n  from?: Array<Stage>;\n  locales?: InputMaybe<Array<Locale>>;\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  releaseId?: InputMaybe<Scalars['String']>;\n  unpublishBase?: InputMaybe<Scalars['Boolean']>;\n  where: AssetWhereUniqueInput;\n};\n\n\nexport type MutationScheduleUnpublishAuthorArgs = {\n  from?: Array<Stage>;\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  releaseId?: InputMaybe<Scalars['String']>;\n  where: AuthorWhereUniqueInput;\n};\n\n\nexport type MutationScheduleUnpublishBlogCategoryArgs = {\n  from?: Array<Stage>;\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  releaseId?: InputMaybe<Scalars['String']>;\n  where: BlogCategoryWhereUniqueInput;\n};\n\n\nexport type MutationScheduleUnpublishNavigationLinkArgs = {\n  from?: Array<Stage>;\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  releaseId?: InputMaybe<Scalars['String']>;\n  where: NavigationLinkWhereUniqueInput;\n};\n\n\nexport type MutationScheduleUnpublishPageArgs = {\n  from?: Array<Stage>;\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  releaseId?: InputMaybe<Scalars['String']>;\n  where: PageWhereUniqueInput;\n};\n\n\nexport type MutationScheduleUnpublishPostArgs = {\n  from?: Array<Stage>;\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  releaseId?: InputMaybe<Scalars['String']>;\n  where: PostWhereUniqueInput;\n};\n\n\nexport type MutationScheduleUnpublishSeoArgs = {\n  from?: Array<Stage>;\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  releaseId?: InputMaybe<Scalars['String']>;\n  where: SeoWhereUniqueInput;\n};\n\n\nexport type MutationScheduleUnpublishShowcaseCardArgs = {\n  from?: Array<Stage>;\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  releaseId?: InputMaybe<Scalars['String']>;\n  where: ShowcaseCardWhereUniqueInput;\n};\n\n\nexport type MutationUnpublishAssetArgs = {\n  from?: Array<Stage>;\n  locales?: InputMaybe<Array<Locale>>;\n  unpublishBase?: InputMaybe<Scalars['Boolean']>;\n  where: AssetWhereUniqueInput;\n};\n\n\nexport type MutationUnpublishAuthorArgs = {\n  from?: Array<Stage>;\n  where: AuthorWhereUniqueInput;\n};\n\n\nexport type MutationUnpublishBlogCategoryArgs = {\n  from?: Array<Stage>;\n  where: BlogCategoryWhereUniqueInput;\n};\n\n\nexport type MutationUnpublishManyAssetsArgs = {\n  from?: Array<Stage>;\n  locales?: InputMaybe<Array<Locale>>;\n  unpublishBase?: InputMaybe<Scalars['Boolean']>;\n  where?: InputMaybe<AssetManyWhereInput>;\n};\n\n\nexport type MutationUnpublishManyAssetsConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  from?: Array<Stage>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: InputMaybe<Stage>;\n  unpublishBase?: InputMaybe<Scalars['Boolean']>;\n  where?: InputMaybe<AssetManyWhereInput>;\n};\n\n\nexport type MutationUnpublishManyAuthorsArgs = {\n  from?: Array<Stage>;\n  where?: InputMaybe<AuthorManyWhereInput>;\n};\n\n\nexport type MutationUnpublishManyAuthorsConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  from?: Array<Stage>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: InputMaybe<Stage>;\n  where?: InputMaybe<AuthorManyWhereInput>;\n};\n\n\nexport type MutationUnpublishManyBlogCategoriesArgs = {\n  from?: Array<Stage>;\n  where?: InputMaybe<BlogCategoryManyWhereInput>;\n};\n\n\nexport type MutationUnpublishManyBlogCategoriesConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  from?: Array<Stage>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: InputMaybe<Stage>;\n  where?: InputMaybe<BlogCategoryManyWhereInput>;\n};\n\n\nexport type MutationUnpublishManyNavigationLinksArgs = {\n  from?: Array<Stage>;\n  where?: InputMaybe<NavigationLinkManyWhereInput>;\n};\n\n\nexport type MutationUnpublishManyNavigationLinksConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  from?: Array<Stage>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: InputMaybe<Stage>;\n  where?: InputMaybe<NavigationLinkManyWhereInput>;\n};\n\n\nexport type MutationUnpublishManyPagesArgs = {\n  from?: Array<Stage>;\n  where?: InputMaybe<PageManyWhereInput>;\n};\n\n\nexport type MutationUnpublishManyPagesConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  from?: Array<Stage>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: InputMaybe<Stage>;\n  where?: InputMaybe<PageManyWhereInput>;\n};\n\n\nexport type MutationUnpublishManyPostsArgs = {\n  from?: Array<Stage>;\n  where?: InputMaybe<PostManyWhereInput>;\n};\n\n\nexport type MutationUnpublishManyPostsConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  from?: Array<Stage>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: InputMaybe<Stage>;\n  where?: InputMaybe<PostManyWhereInput>;\n};\n\n\nexport type MutationUnpublishManySeosArgs = {\n  from?: Array<Stage>;\n  where?: InputMaybe<SeoManyWhereInput>;\n};\n\n\nexport type MutationUnpublishManySeosConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  from?: Array<Stage>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: InputMaybe<Stage>;\n  where?: InputMaybe<SeoManyWhereInput>;\n};\n\n\nexport type MutationUnpublishManyShowcaseCardsArgs = {\n  from?: Array<Stage>;\n  where?: InputMaybe<ShowcaseCardManyWhereInput>;\n};\n\n\nexport type MutationUnpublishManyShowcaseCardsConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  first?: InputMaybe<Scalars['Int']>;\n  from?: Array<Stage>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: InputMaybe<Stage>;\n  where?: InputMaybe<ShowcaseCardManyWhereInput>;\n};\n\n\nexport type MutationUnpublishNavigationLinkArgs = {\n  from?: Array<Stage>;\n  where: NavigationLinkWhereUniqueInput;\n};\n\n\nexport type MutationUnpublishPageArgs = {\n  from?: Array<Stage>;\n  where: PageWhereUniqueInput;\n};\n\n\nexport type MutationUnpublishPostArgs = {\n  from?: Array<Stage>;\n  where: PostWhereUniqueInput;\n};\n\n\nexport type MutationUnpublishSeoArgs = {\n  from?: Array<Stage>;\n  where: SeoWhereUniqueInput;\n};\n\n\nexport type MutationUnpublishShowcaseCardArgs = {\n  from?: Array<Stage>;\n  where: ShowcaseCardWhereUniqueInput;\n};\n\n\nexport type MutationUpdateAssetArgs = {\n  data: AssetUpdateInput;\n  where: AssetWhereUniqueInput;\n};\n\n\nexport type MutationUpdateAuthorArgs = {\n  data: AuthorUpdateInput;\n  where: AuthorWhereUniqueInput;\n};\n\n\nexport type MutationUpdateBlogCategoryArgs = {\n  data: BlogCategoryUpdateInput;\n  where: BlogCategoryWhereUniqueInput;\n};\n\n\nexport type MutationUpdateManyAssetsArgs = {\n  data: AssetUpdateManyInput;\n  where?: InputMaybe<AssetManyWhereInput>;\n};\n\n\nexport type MutationUpdateManyAssetsConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  data: AssetUpdateManyInput;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<AssetManyWhereInput>;\n};\n\n\nexport type MutationUpdateManyAuthorsArgs = {\n  data: AuthorUpdateManyInput;\n  where?: InputMaybe<AuthorManyWhereInput>;\n};\n\n\nexport type MutationUpdateManyAuthorsConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  data: AuthorUpdateManyInput;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<AuthorManyWhereInput>;\n};\n\n\nexport type MutationUpdateManyBlogCategoriesArgs = {\n  data: BlogCategoryUpdateManyInput;\n  where?: InputMaybe<BlogCategoryManyWhereInput>;\n};\n\n\nexport type MutationUpdateManyBlogCategoriesConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  data: BlogCategoryUpdateManyInput;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<BlogCategoryManyWhereInput>;\n};\n\n\nexport type MutationUpdateManyNavigationLinksArgs = {\n  data: NavigationLinkUpdateManyInput;\n  where?: InputMaybe<NavigationLinkManyWhereInput>;\n};\n\n\nexport type MutationUpdateManyNavigationLinksConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  data: NavigationLinkUpdateManyInput;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<NavigationLinkManyWhereInput>;\n};\n\n\nexport type MutationUpdateManyPagesArgs = {\n  data: PageUpdateManyInput;\n  where?: InputMaybe<PageManyWhereInput>;\n};\n\n\nexport type MutationUpdateManyPagesConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  data: PageUpdateManyInput;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PageManyWhereInput>;\n};\n\n\nexport type MutationUpdateManyPostsArgs = {\n  data: PostUpdateManyInput;\n  where?: InputMaybe<PostManyWhereInput>;\n};\n\n\nexport type MutationUpdateManyPostsConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  data: PostUpdateManyInput;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<PostManyWhereInput>;\n};\n\n\nexport type MutationUpdateManySeosArgs = {\n  data: SeoUpdateManyInput;\n  where?: InputMaybe<SeoManyWhereInput>;\n};\n\n\nexport type MutationUpdateManySeosConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  data: SeoUpdateManyInput;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<SeoManyWhereInput>;\n};\n\n\nexport type MutationUpdateManyShowcaseCardsArgs = {\n  data: ShowcaseCardUpdateManyInput;\n  where?: InputMaybe<ShowcaseCardManyWhereInput>;\n};\n\n\nexport type MutationUpdateManyShowcaseCardsConnectionArgs = {\n  after?: InputMaybe<Scalars['ID']>;\n  before?: InputMaybe<Scalars['ID']>;\n  data: ShowcaseCardUpdateManyInput;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<ShowcaseCardManyWhereInput>;\n};\n\n\nexport type MutationUpdateNavigationLinkArgs = {\n  data: NavigationLinkUpdateInput;\n  where: NavigationLinkWhereUniqueInput;\n};\n\n\nexport type MutationUpdatePageArgs = {\n  data: PageUpdateInput;\n  where: PageWhereUniqueInput;\n};\n\n\nexport type MutationUpdatePostArgs = {\n  data: PostUpdateInput;\n  where: PostWhereUniqueInput;\n};\n\n\nexport type MutationUpdateScheduledReleaseArgs = {\n  data: ScheduledReleaseUpdateInput;\n  where: ScheduledReleaseWhereUniqueInput;\n};\n\n\nexport type MutationUpdateSeoArgs = {\n  data: SeoUpdateInput;\n  where: SeoWhereUniqueInput;\n};\n\n\nexport type MutationUpdateShowcaseCardArgs = {\n  data: ShowcaseCardUpdateInput;\n  where: ShowcaseCardWhereUniqueInput;\n};\n\n\nexport type MutationUpsertAssetArgs = {\n  upsert: AssetUpsertInput;\n  where: AssetWhereUniqueInput;\n};\n\n\nexport type MutationUpsertAuthorArgs = {\n  upsert: AuthorUpsertInput;\n  where: AuthorWhereUniqueInput;\n};\n\n\nexport type MutationUpsertBlogCategoryArgs = {\n  upsert: BlogCategoryUpsertInput;\n  where: BlogCategoryWhereUniqueInput;\n};\n\n\nexport type MutationUpsertNavigationLinkArgs = {\n  upsert: NavigationLinkUpsertInput;\n  where: NavigationLinkWhereUniqueInput;\n};\n\n\nexport type MutationUpsertPageArgs = {\n  upsert: PageUpsertInput;\n  where: PageWhereUniqueInput;\n};\n\n\nexport type MutationUpsertPostArgs = {\n  upsert: PostUpsertInput;\n  where: PostWhereUniqueInput;\n};\n\n\nexport type MutationUpsertSeoArgs = {\n  upsert: SeoUpsertInput;\n  where: SeoWhereUniqueInput;\n};\n\n\nexport type MutationUpsertShowcaseCardArgs = {\n  upsert: ShowcaseCardUpsertInput;\n  where: ShowcaseCardWhereUniqueInput;\n};\n\nexport type NavigationLink = Node & {\n  __typename?: 'NavigationLink';\n  /** The time the document was created */\n  createdAt: Scalars['DateTime'];\n  /** User that created this document */\n  createdBy?: Maybe<User>;\n  /** Get the document in other stages */\n  documentInStages: Array<NavigationLink>;\n  /** List of NavigationLink versions */\n  history: Array<Version>;\n  /** The unique identifier */\n  id: Scalars['ID'];\n  linkText: Scalars['String'];\n  /** The time the document was published. Null on documents in draft stage. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** User that last published this document */\n  publishedBy?: Maybe<User>;\n  scheduledIn: Array<ScheduledOperation>;\n  /** System stage field */\n  stage: Stage;\n  /** The time the document was updated */\n  updatedAt: Scalars['DateTime'];\n  /** User that last updated this document */\n  updatedBy?: Maybe<User>;\n  url: Scalars['String'];\n};\n\n\nexport type NavigationLinkCreatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type NavigationLinkDocumentInStagesArgs = {\n  includeCurrent?: Scalars['Boolean'];\n  inheritLocale?: Scalars['Boolean'];\n  stages?: Array<Stage>;\n};\n\n\nexport type NavigationLinkHistoryArgs = {\n  limit?: Scalars['Int'];\n  skip?: Scalars['Int'];\n  stageOverride?: InputMaybe<Stage>;\n};\n\n\nexport type NavigationLinkPublishedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type NavigationLinkScheduledInArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<ScheduledOperationWhereInput>;\n};\n\n\nexport type NavigationLinkUpdatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n/** A connection to a list of items. */\nexport type NavigationLinkConnection = {\n  __typename?: 'NavigationLinkConnection';\n  aggregate: Aggregate;\n  /** A list of edges. */\n  edges: Array<NavigationLinkEdge>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\nexport type NavigationLinkCreateInput = {\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  linkText: Scalars['String'];\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  url: Scalars['String'];\n};\n\n/** An edge in a connection. */\nexport type NavigationLinkEdge = {\n  __typename?: 'NavigationLinkEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node: NavigationLink;\n};\n\n/** Identifies documents */\nexport type NavigationLinkManyWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<NavigationLinkWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<NavigationLinkWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<NavigationLinkWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdBy?: InputMaybe<UserWhereInput>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  linkText?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  linkText_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  linkText_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  linkText_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  linkText_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  linkText_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  linkText_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  linkText_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  linkText_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  linkText_starts_with?: InputMaybe<Scalars['String']>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  publishedBy?: InputMaybe<UserWhereInput>;\n  scheduledIn_every?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_none?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_some?: InputMaybe<ScheduledOperationWhereInput>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedBy?: InputMaybe<UserWhereInput>;\n  url?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  url_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  url_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  url_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  url_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  url_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  url_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  url_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  url_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  url_starts_with?: InputMaybe<Scalars['String']>;\n};\n\nexport enum NavigationLinkOrderByInput {\n  CreatedAtAsc = 'createdAt_ASC',\n  CreatedAtDesc = 'createdAt_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  LinkTextAsc = 'linkText_ASC',\n  LinkTextDesc = 'linkText_DESC',\n  PublishedAtAsc = 'publishedAt_ASC',\n  PublishedAtDesc = 'publishedAt_DESC',\n  UpdatedAtAsc = 'updatedAt_ASC',\n  UpdatedAtDesc = 'updatedAt_DESC',\n  UrlAsc = 'url_ASC',\n  UrlDesc = 'url_DESC'\n}\n\nexport type NavigationLinkUpdateInput = {\n  linkText?: InputMaybe<Scalars['String']>;\n  url?: InputMaybe<Scalars['String']>;\n};\n\nexport type NavigationLinkUpdateManyInput = {\n  /** No fields in updateMany data input */\n  _?: InputMaybe<Scalars['String']>;\n};\n\nexport type NavigationLinkUpsertInput = {\n  /** Create document if it didn't exist */\n  create: NavigationLinkCreateInput;\n  /** Update document if it exists */\n  update: NavigationLinkUpdateInput;\n};\n\n/** Identifies documents */\nexport type NavigationLinkWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<NavigationLinkWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<NavigationLinkWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<NavigationLinkWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdBy?: InputMaybe<UserWhereInput>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  linkText?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  linkText_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  linkText_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  linkText_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  linkText_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  linkText_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  linkText_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  linkText_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  linkText_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  linkText_starts_with?: InputMaybe<Scalars['String']>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  publishedBy?: InputMaybe<UserWhereInput>;\n  scheduledIn_every?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_none?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_some?: InputMaybe<ScheduledOperationWhereInput>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedBy?: InputMaybe<UserWhereInput>;\n  url?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  url_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  url_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  url_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  url_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  url_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  url_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  url_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  url_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  url_starts_with?: InputMaybe<Scalars['String']>;\n};\n\n/** References NavigationLink record uniquely */\nexport type NavigationLinkWhereUniqueInput = {\n  id?: InputMaybe<Scalars['ID']>;\n  linkText?: InputMaybe<Scalars['String']>;\n  url?: InputMaybe<Scalars['String']>;\n};\n\n/** An object with an ID */\nexport type Node = {\n  /** The id of the object. */\n  id: Scalars['ID'];\n  /** The Stage of an object */\n  stage: Stage;\n};\n\nexport type Page = Node & {\n  __typename?: 'Page';\n  /** Enter the content for this page. The content uses the rich-text editor, giving you a better visual representation. */\n  content: RichText;\n  /** The time the document was created */\n  createdAt: Scalars['DateTime'];\n  /** User that created this document */\n  createdBy?: Maybe<User>;\n  /** Get the document in other stages */\n  documentInStages: Array<Page>;\n  /** List of Page versions */\n  history: Array<Version>;\n  /** The unique identifier */\n  id: Scalars['ID'];\n  /** The time the document was published. Null on documents in draft stage. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** User that last published this document */\n  publishedBy?: Maybe<User>;\n  scheduledIn: Array<ScheduledOperation>;\n  /** Relate an SEO model to this page */\n  seo?: Maybe<Seo>;\n  /** Enter the slug for this page, such as about, blog, or contact */\n  slug: Scalars['String'];\n  /** System stage field */\n  stage: Stage;\n  /** Enter a short description to be used as a subtitle */\n  subtitle?: Maybe<Scalars['String']>;\n  /** What is the title of your page? */\n  title: Scalars['String'];\n  /** The time the document was updated */\n  updatedAt: Scalars['DateTime'];\n  /** User that last updated this document */\n  updatedBy?: Maybe<User>;\n};\n\n\nexport type PageCreatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type PageDocumentInStagesArgs = {\n  includeCurrent?: Scalars['Boolean'];\n  inheritLocale?: Scalars['Boolean'];\n  stages?: Array<Stage>;\n};\n\n\nexport type PageHistoryArgs = {\n  limit?: Scalars['Int'];\n  skip?: Scalars['Int'];\n  stageOverride?: InputMaybe<Stage>;\n};\n\n\nexport type PagePublishedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type PageScheduledInArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<ScheduledOperationWhereInput>;\n};\n\n\nexport type PageSeoArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type PageUpdatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n/** A connection to a list of items. */\nexport type PageConnection = {\n  __typename?: 'PageConnection';\n  aggregate: Aggregate;\n  /** A list of edges. */\n  edges: Array<PageEdge>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\nexport type PageCreateInput = {\n  content: Scalars['RichTextAST'];\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  seo?: InputMaybe<SeoCreateOneInlineInput>;\n  slug: Scalars['String'];\n  subtitle?: InputMaybe<Scalars['String']>;\n  title: Scalars['String'];\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n};\n\n/** An edge in a connection. */\nexport type PageEdge = {\n  __typename?: 'PageEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node: Page;\n};\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['String']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** Number of items in the current page. */\n  pageSize?: Maybe<Scalars['Int']>;\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['String']>;\n};\n\n/** Identifies documents */\nexport type PageManyWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<PageWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<PageWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<PageWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdBy?: InputMaybe<UserWhereInput>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  publishedBy?: InputMaybe<UserWhereInput>;\n  scheduledIn_every?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_none?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_some?: InputMaybe<ScheduledOperationWhereInput>;\n  seo?: InputMaybe<SeoWhereInput>;\n  slug?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  slug_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  slug_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  slug_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  slug_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  slug_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  slug_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  slug_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  slug_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  slug_starts_with?: InputMaybe<Scalars['String']>;\n  subtitle?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  subtitle_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  subtitle_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  subtitle_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  subtitle_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  subtitle_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  subtitle_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  subtitle_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  subtitle_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  subtitle_starts_with?: InputMaybe<Scalars['String']>;\n  title?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  title_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  title_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  title_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  title_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  title_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  title_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  title_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  title_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  title_starts_with?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedBy?: InputMaybe<UserWhereInput>;\n};\n\nexport enum PageOrderByInput {\n  CreatedAtAsc = 'createdAt_ASC',\n  CreatedAtDesc = 'createdAt_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  PublishedAtAsc = 'publishedAt_ASC',\n  PublishedAtDesc = 'publishedAt_DESC',\n  SlugAsc = 'slug_ASC',\n  SlugDesc = 'slug_DESC',\n  SubtitleAsc = 'subtitle_ASC',\n  SubtitleDesc = 'subtitle_DESC',\n  TitleAsc = 'title_ASC',\n  TitleDesc = 'title_DESC',\n  UpdatedAtAsc = 'updatedAt_ASC',\n  UpdatedAtDesc = 'updatedAt_DESC'\n}\n\nexport type PageUpdateInput = {\n  content?: InputMaybe<Scalars['RichTextAST']>;\n  seo?: InputMaybe<SeoUpdateOneInlineInput>;\n  slug?: InputMaybe<Scalars['String']>;\n  subtitle?: InputMaybe<Scalars['String']>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\nexport type PageUpdateManyInput = {\n  content?: InputMaybe<Scalars['RichTextAST']>;\n  subtitle?: InputMaybe<Scalars['String']>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\nexport type PageUpdateWithNestedWhereUniqueInput = {\n  /** Document to update */\n  data: PageUpdateInput;\n  /** Unique document search */\n  where: PageWhereUniqueInput;\n};\n\nexport type PageUpsertInput = {\n  /** Create document if it didn't exist */\n  create: PageCreateInput;\n  /** Update document if it exists */\n  update: PageUpdateInput;\n};\n\nexport type PageUpsertWithNestedWhereUniqueInput = {\n  /** Upsert data */\n  data: PageUpsertInput;\n  /** Unique document search */\n  where: PageWhereUniqueInput;\n};\n\n/** Identifies documents */\nexport type PageWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<PageWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<PageWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<PageWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdBy?: InputMaybe<UserWhereInput>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  publishedBy?: InputMaybe<UserWhereInput>;\n  scheduledIn_every?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_none?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_some?: InputMaybe<ScheduledOperationWhereInput>;\n  seo?: InputMaybe<SeoWhereInput>;\n  slug?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  slug_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  slug_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  slug_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  slug_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  slug_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  slug_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  slug_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  slug_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  slug_starts_with?: InputMaybe<Scalars['String']>;\n  subtitle?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  subtitle_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  subtitle_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  subtitle_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  subtitle_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  subtitle_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  subtitle_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  subtitle_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  subtitle_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  subtitle_starts_with?: InputMaybe<Scalars['String']>;\n  title?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  title_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  title_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  title_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  title_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  title_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  title_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  title_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  title_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  title_starts_with?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedBy?: InputMaybe<UserWhereInput>;\n};\n\n/** References Page record uniquely */\nexport type PageWhereUniqueInput = {\n  id?: InputMaybe<Scalars['ID']>;\n  slug?: InputMaybe<Scalars['String']>;\n};\n\nexport type Post = Node & {\n  __typename?: 'Post';\n  /** Who should be credited with writing this post? */\n  author?: Maybe<Author>;\n  categories: Array<BlogCategory>;\n  /** Write your blog post! */\n  content: RichText;\n  coverImage?: Maybe<Asset>;\n  /** The time the document was created */\n  createdAt: Scalars['DateTime'];\n  /** User that created this document */\n  createdBy?: Maybe<User>;\n  /** What is the published date you would like to show for this post? */\n  date: Scalars['Date'];\n  /** Get the document in other stages */\n  documentInStages: Array<Post>;\n  /** Add a short excerpt to summarize this post */\n  excerpt?: Maybe<Scalars['String']>;\n  /** List of Post versions */\n  history: Array<Version>;\n  /** The unique identifier */\n  id: Scalars['ID'];\n  /** The time the document was published. Null on documents in draft stage. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** User that last published this document */\n  publishedBy?: Maybe<User>;\n  scheduledIn: Array<ScheduledOperation>;\n  /** Attach an SEO model to this post */\n  seo?: Maybe<Seo>;\n  /** Select a slug for this blog post, such as post-1, post-2, etc. */\n  slug: Scalars['String'];\n  /** System stage field */\n  stage: Stage;\n  /** Add any relevant tags to this blog post */\n  tags: Array<Scalars['String']>;\n  /** Name your blog post! */\n  title: Scalars['String'];\n  /** The time the document was updated */\n  updatedAt: Scalars['DateTime'];\n  /** User that last updated this document */\n  updatedBy?: Maybe<User>;\n};\n\n\nexport type PostAuthorArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type PostCategoriesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  orderBy?: InputMaybe<BlogCategoryOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<BlogCategoryWhereInput>;\n};\n\n\nexport type PostCoverImageArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type PostCreatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type PostDocumentInStagesArgs = {\n  includeCurrent?: Scalars['Boolean'];\n  inheritLocale?: Scalars['Boolean'];\n  stages?: Array<Stage>;\n};\n\n\nexport type PostHistoryArgs = {\n  limit?: Scalars['Int'];\n  skip?: Scalars['Int'];\n  stageOverride?: InputMaybe<Stage>;\n};\n\n\nexport type PostPublishedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type PostScheduledInArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<ScheduledOperationWhereInput>;\n};\n\n\nexport type PostSeoArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type PostUpdatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\nexport type PostConnectInput = {\n  /** Allow to specify document position in list of connected documents, will default to appending at end of list */\n  position?: InputMaybe<ConnectPositionInput>;\n  /** Document to connect */\n  where: PostWhereUniqueInput;\n};\n\n/** A connection to a list of items. */\nexport type PostConnection = {\n  __typename?: 'PostConnection';\n  aggregate: Aggregate;\n  /** A list of edges. */\n  edges: Array<PostEdge>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\nexport type PostCreateInput = {\n  author?: InputMaybe<AuthorCreateOneInlineInput>;\n  categories?: InputMaybe<BlogCategoryCreateManyInlineInput>;\n  content: Scalars['RichTextAST'];\n  coverImage?: InputMaybe<AssetCreateOneInlineInput>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  date: Scalars['Date'];\n  excerpt?: InputMaybe<Scalars['String']>;\n  seo?: InputMaybe<SeoCreateOneInlineInput>;\n  slug: Scalars['String'];\n  tags?: InputMaybe<Array<Scalars['String']>>;\n  title: Scalars['String'];\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n};\n\nexport type PostCreateManyInlineInput = {\n  /** Connect multiple existing Post documents */\n  connect?: InputMaybe<Array<PostWhereUniqueInput>>;\n  /** Create and connect multiple existing Post documents */\n  create?: InputMaybe<Array<PostCreateInput>>;\n};\n\n/** An edge in a connection. */\nexport type PostEdge = {\n  __typename?: 'PostEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node: Post;\n};\n\n/** Identifies documents */\nexport type PostManyWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<PostWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<PostWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<PostWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  author?: InputMaybe<AuthorWhereInput>;\n  categories_every?: InputMaybe<BlogCategoryWhereInput>;\n  categories_none?: InputMaybe<BlogCategoryWhereInput>;\n  categories_some?: InputMaybe<BlogCategoryWhereInput>;\n  coverImage?: InputMaybe<AssetWhereInput>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdBy?: InputMaybe<UserWhereInput>;\n  date?: InputMaybe<Scalars['Date']>;\n  /** All values greater than the given value. */\n  date_gt?: InputMaybe<Scalars['Date']>;\n  /** All values greater than or equal the given value. */\n  date_gte?: InputMaybe<Scalars['Date']>;\n  /** All values that are contained in given list. */\n  date_in?: InputMaybe<Array<Scalars['Date']>>;\n  /** All values less than the given value. */\n  date_lt?: InputMaybe<Scalars['Date']>;\n  /** All values less than or equal the given value. */\n  date_lte?: InputMaybe<Scalars['Date']>;\n  /** All values that are not equal to given value. */\n  date_not?: InputMaybe<Scalars['Date']>;\n  /** All values that are not contained in given list. */\n  date_not_in?: InputMaybe<Array<Scalars['Date']>>;\n  excerpt?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  excerpt_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  excerpt_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  excerpt_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  excerpt_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  excerpt_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  excerpt_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  excerpt_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  excerpt_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  excerpt_starts_with?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  publishedBy?: InputMaybe<UserWhereInput>;\n  scheduledIn_every?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_none?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_some?: InputMaybe<ScheduledOperationWhereInput>;\n  seo?: InputMaybe<SeoWhereInput>;\n  slug?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  slug_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  slug_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  slug_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  slug_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  slug_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  slug_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  slug_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  slug_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  slug_starts_with?: InputMaybe<Scalars['String']>;\n  /** Matches if the field array contains *all* items provided to the filter and order does match */\n  tags?: InputMaybe<Array<Scalars['String']>>;\n  /** Matches if the field array contains *all* items provided to the filter */\n  tags_contains_all?: InputMaybe<Array<Scalars['String']>>;\n  /** Matches if the field array does not contain any of the items provided to the filter */\n  tags_contains_none?: InputMaybe<Array<Scalars['String']>>;\n  /** Matches if the field array contains at least one item provided to the filter */\n  tags_contains_some?: InputMaybe<Array<Scalars['String']>>;\n  /** Matches if the field array does not contains *all* items provided to the filter or order does not match */\n  tags_not?: InputMaybe<Array<Scalars['String']>>;\n  title?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  title_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  title_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  title_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  title_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  title_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  title_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  title_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  title_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  title_starts_with?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedBy?: InputMaybe<UserWhereInput>;\n};\n\nexport enum PostOrderByInput {\n  CreatedAtAsc = 'createdAt_ASC',\n  CreatedAtDesc = 'createdAt_DESC',\n  DateAsc = 'date_ASC',\n  DateDesc = 'date_DESC',\n  ExcerptAsc = 'excerpt_ASC',\n  ExcerptDesc = 'excerpt_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  PublishedAtAsc = 'publishedAt_ASC',\n  PublishedAtDesc = 'publishedAt_DESC',\n  SlugAsc = 'slug_ASC',\n  SlugDesc = 'slug_DESC',\n  TagsAsc = 'tags_ASC',\n  TagsDesc = 'tags_DESC',\n  TitleAsc = 'title_ASC',\n  TitleDesc = 'title_DESC',\n  UpdatedAtAsc = 'updatedAt_ASC',\n  UpdatedAtDesc = 'updatedAt_DESC'\n}\n\nexport type PostUpdateInput = {\n  author?: InputMaybe<AuthorUpdateOneInlineInput>;\n  categories?: InputMaybe<BlogCategoryUpdateManyInlineInput>;\n  content?: InputMaybe<Scalars['RichTextAST']>;\n  coverImage?: InputMaybe<AssetUpdateOneInlineInput>;\n  date?: InputMaybe<Scalars['Date']>;\n  excerpt?: InputMaybe<Scalars['String']>;\n  seo?: InputMaybe<SeoUpdateOneInlineInput>;\n  slug?: InputMaybe<Scalars['String']>;\n  tags?: InputMaybe<Array<Scalars['String']>>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\nexport type PostUpdateManyInlineInput = {\n  /** Connect multiple existing Post documents */\n  connect?: InputMaybe<Array<PostConnectInput>>;\n  /** Create and connect multiple Post documents */\n  create?: InputMaybe<Array<PostCreateInput>>;\n  /** Delete multiple Post documents */\n  delete?: InputMaybe<Array<PostWhereUniqueInput>>;\n  /** Disconnect multiple Post documents */\n  disconnect?: InputMaybe<Array<PostWhereUniqueInput>>;\n  /** Override currently-connected documents with multiple existing Post documents */\n  set?: InputMaybe<Array<PostWhereUniqueInput>>;\n  /** Update multiple Post documents */\n  update?: InputMaybe<Array<PostUpdateWithNestedWhereUniqueInput>>;\n  /** Upsert multiple Post documents */\n  upsert?: InputMaybe<Array<PostUpsertWithNestedWhereUniqueInput>>;\n};\n\nexport type PostUpdateManyInput = {\n  content?: InputMaybe<Scalars['RichTextAST']>;\n  date?: InputMaybe<Scalars['Date']>;\n  excerpt?: InputMaybe<Scalars['String']>;\n  tags?: InputMaybe<Array<Scalars['String']>>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\nexport type PostUpdateWithNestedWhereUniqueInput = {\n  /** Document to update */\n  data: PostUpdateInput;\n  /** Unique document search */\n  where: PostWhereUniqueInput;\n};\n\nexport type PostUpsertInput = {\n  /** Create document if it didn't exist */\n  create: PostCreateInput;\n  /** Update document if it exists */\n  update: PostUpdateInput;\n};\n\nexport type PostUpsertWithNestedWhereUniqueInput = {\n  /** Upsert data */\n  data: PostUpsertInput;\n  /** Unique document search */\n  where: PostWhereUniqueInput;\n};\n\n/** Identifies documents */\nexport type PostWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<PostWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<PostWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<PostWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  author?: InputMaybe<AuthorWhereInput>;\n  categories_every?: InputMaybe<BlogCategoryWhereInput>;\n  categories_none?: InputMaybe<BlogCategoryWhereInput>;\n  categories_some?: InputMaybe<BlogCategoryWhereInput>;\n  coverImage?: InputMaybe<AssetWhereInput>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdBy?: InputMaybe<UserWhereInput>;\n  date?: InputMaybe<Scalars['Date']>;\n  /** All values greater than the given value. */\n  date_gt?: InputMaybe<Scalars['Date']>;\n  /** All values greater than or equal the given value. */\n  date_gte?: InputMaybe<Scalars['Date']>;\n  /** All values that are contained in given list. */\n  date_in?: InputMaybe<Array<Scalars['Date']>>;\n  /** All values less than the given value. */\n  date_lt?: InputMaybe<Scalars['Date']>;\n  /** All values less than or equal the given value. */\n  date_lte?: InputMaybe<Scalars['Date']>;\n  /** All values that are not equal to given value. */\n  date_not?: InputMaybe<Scalars['Date']>;\n  /** All values that are not contained in given list. */\n  date_not_in?: InputMaybe<Array<Scalars['Date']>>;\n  excerpt?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  excerpt_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  excerpt_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  excerpt_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  excerpt_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  excerpt_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  excerpt_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  excerpt_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  excerpt_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  excerpt_starts_with?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  publishedBy?: InputMaybe<UserWhereInput>;\n  scheduledIn_every?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_none?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_some?: InputMaybe<ScheduledOperationWhereInput>;\n  seo?: InputMaybe<SeoWhereInput>;\n  slug?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  slug_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  slug_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  slug_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  slug_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  slug_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  slug_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  slug_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  slug_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  slug_starts_with?: InputMaybe<Scalars['String']>;\n  /** Matches if the field array contains *all* items provided to the filter and order does match */\n  tags?: InputMaybe<Array<Scalars['String']>>;\n  /** Matches if the field array contains *all* items provided to the filter */\n  tags_contains_all?: InputMaybe<Array<Scalars['String']>>;\n  /** Matches if the field array does not contain any of the items provided to the filter */\n  tags_contains_none?: InputMaybe<Array<Scalars['String']>>;\n  /** Matches if the field array contains at least one item provided to the filter */\n  tags_contains_some?: InputMaybe<Array<Scalars['String']>>;\n  /** Matches if the field array does not contains *all* items provided to the filter or order does not match */\n  tags_not?: InputMaybe<Array<Scalars['String']>>;\n  title?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  title_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  title_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  title_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  title_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  title_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  title_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  title_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  title_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  title_starts_with?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedBy?: InputMaybe<UserWhereInput>;\n};\n\n/** References Post record uniquely */\nexport type PostWhereUniqueInput = {\n  id?: InputMaybe<Scalars['ID']>;\n  slug?: InputMaybe<Scalars['String']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  /** Retrieve a single asset */\n  asset?: Maybe<Asset>;\n  /** Retrieve document version */\n  assetVersion?: Maybe<DocumentVersion>;\n  /** Retrieve multiple assets */\n  assets: Array<Asset>;\n  /** Retrieve multiple assets using the Relay connection interface */\n  assetsConnection: AssetConnection;\n  /** Retrieve a single author */\n  author?: Maybe<Author>;\n  /** Retrieve document version */\n  authorVersion?: Maybe<DocumentVersion>;\n  /** Retrieve multiple authors */\n  authors: Array<Author>;\n  /** Retrieve multiple authors using the Relay connection interface */\n  authorsConnection: AuthorConnection;\n  /** Retrieve multiple blogCategories */\n  blogCategories: Array<BlogCategory>;\n  /** Retrieve multiple blogCategories using the Relay connection interface */\n  blogCategoriesConnection: BlogCategoryConnection;\n  /** Retrieve a single blogCategory */\n  blogCategory?: Maybe<BlogCategory>;\n  /** Retrieve document version */\n  blogCategoryVersion?: Maybe<DocumentVersion>;\n  /** Retrieve a single navigationLink */\n  navigationLink?: Maybe<NavigationLink>;\n  /** Retrieve document version */\n  navigationLinkVersion?: Maybe<DocumentVersion>;\n  /** Retrieve multiple navigationLinks */\n  navigationLinks: Array<NavigationLink>;\n  /** Retrieve multiple navigationLinks using the Relay connection interface */\n  navigationLinksConnection: NavigationLinkConnection;\n  /** Fetches an object given its ID */\n  node?: Maybe<Node>;\n  /** Retrieve a single page */\n  page?: Maybe<Page>;\n  /** Retrieve document version */\n  pageVersion?: Maybe<DocumentVersion>;\n  /** Retrieve multiple pages */\n  pages: Array<Page>;\n  /** Retrieve multiple pages using the Relay connection interface */\n  pagesConnection: PageConnection;\n  /** Retrieve a single post */\n  post?: Maybe<Post>;\n  /** Retrieve document version */\n  postVersion?: Maybe<DocumentVersion>;\n  /** Retrieve multiple posts */\n  posts: Array<Post>;\n  /** Retrieve multiple posts using the Relay connection interface */\n  postsConnection: PostConnection;\n  /** Retrieve a single scheduledOperation */\n  scheduledOperation?: Maybe<ScheduledOperation>;\n  /** Retrieve multiple scheduledOperations */\n  scheduledOperations: Array<ScheduledOperation>;\n  /** Retrieve multiple scheduledOperations using the Relay connection interface */\n  scheduledOperationsConnection: ScheduledOperationConnection;\n  /** Retrieve a single scheduledRelease */\n  scheduledRelease?: Maybe<ScheduledRelease>;\n  /** Retrieve multiple scheduledReleases */\n  scheduledReleases: Array<ScheduledRelease>;\n  /** Retrieve multiple scheduledReleases using the Relay connection interface */\n  scheduledReleasesConnection: ScheduledReleaseConnection;\n  /** Retrieve a single seo */\n  seo?: Maybe<Seo>;\n  /** Retrieve document version */\n  seoVersion?: Maybe<DocumentVersion>;\n  /** Retrieve multiple seos */\n  seos: Array<Seo>;\n  /** Retrieve multiple seos using the Relay connection interface */\n  seosConnection: SeoConnection;\n  /** Retrieve a single showcaseCard */\n  showcaseCard?: Maybe<ShowcaseCard>;\n  /** Retrieve document version */\n  showcaseCardVersion?: Maybe<DocumentVersion>;\n  /** Retrieve multiple showcaseCards */\n  showcaseCards: Array<ShowcaseCard>;\n  /** Retrieve multiple showcaseCards using the Relay connection interface */\n  showcaseCardsConnection: ShowcaseCardConnection;\n  /** Retrieve a single user */\n  user?: Maybe<User>;\n  /** Retrieve multiple users */\n  users: Array<User>;\n  /** Retrieve multiple users using the Relay connection interface */\n  usersConnection: UserConnection;\n};\n\n\nexport type QueryAssetArgs = {\n  locales?: Array<Locale>;\n  stage?: Stage;\n  where: AssetWhereUniqueInput;\n};\n\n\nexport type QueryAssetVersionArgs = {\n  where: VersionWhereInput;\n};\n\n\nexport type QueryAssetsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<AssetOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<AssetWhereInput>;\n};\n\n\nexport type QueryAssetsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<AssetOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<AssetWhereInput>;\n};\n\n\nexport type QueryAuthorArgs = {\n  locales?: Array<Locale>;\n  stage?: Stage;\n  where: AuthorWhereUniqueInput;\n};\n\n\nexport type QueryAuthorVersionArgs = {\n  where: VersionWhereInput;\n};\n\n\nexport type QueryAuthorsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<AuthorOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<AuthorWhereInput>;\n};\n\n\nexport type QueryAuthorsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<AuthorOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<AuthorWhereInput>;\n};\n\n\nexport type QueryBlogCategoriesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<BlogCategoryOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<BlogCategoryWhereInput>;\n};\n\n\nexport type QueryBlogCategoriesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<BlogCategoryOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<BlogCategoryWhereInput>;\n};\n\n\nexport type QueryBlogCategoryArgs = {\n  locales?: Array<Locale>;\n  stage?: Stage;\n  where: BlogCategoryWhereUniqueInput;\n};\n\n\nexport type QueryBlogCategoryVersionArgs = {\n  where: VersionWhereInput;\n};\n\n\nexport type QueryNavigationLinkArgs = {\n  locales?: Array<Locale>;\n  stage?: Stage;\n  where: NavigationLinkWhereUniqueInput;\n};\n\n\nexport type QueryNavigationLinkVersionArgs = {\n  where: VersionWhereInput;\n};\n\n\nexport type QueryNavigationLinksArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<NavigationLinkOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<NavigationLinkWhereInput>;\n};\n\n\nexport type QueryNavigationLinksConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<NavigationLinkOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<NavigationLinkWhereInput>;\n};\n\n\nexport type QueryNodeArgs = {\n  id: Scalars['ID'];\n  locales?: Array<Locale>;\n  stage?: Stage;\n};\n\n\nexport type QueryPageArgs = {\n  locales?: Array<Locale>;\n  stage?: Stage;\n  where: PageWhereUniqueInput;\n};\n\n\nexport type QueryPageVersionArgs = {\n  where: VersionWhereInput;\n};\n\n\nexport type QueryPagesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<PageOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<PageWhereInput>;\n};\n\n\nexport type QueryPagesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<PageOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<PageWhereInput>;\n};\n\n\nexport type QueryPostArgs = {\n  locales?: Array<Locale>;\n  stage?: Stage;\n  where: PostWhereUniqueInput;\n};\n\n\nexport type QueryPostVersionArgs = {\n  where: VersionWhereInput;\n};\n\n\nexport type QueryPostsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<PostOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<PostWhereInput>;\n};\n\n\nexport type QueryPostsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<PostOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<PostWhereInput>;\n};\n\n\nexport type QueryScheduledOperationArgs = {\n  locales?: Array<Locale>;\n  stage?: Stage;\n  where: ScheduledOperationWhereUniqueInput;\n};\n\n\nexport type QueryScheduledOperationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<ScheduledOperationOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<ScheduledOperationWhereInput>;\n};\n\n\nexport type QueryScheduledOperationsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<ScheduledOperationOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<ScheduledOperationWhereInput>;\n};\n\n\nexport type QueryScheduledReleaseArgs = {\n  locales?: Array<Locale>;\n  stage?: Stage;\n  where: ScheduledReleaseWhereUniqueInput;\n};\n\n\nexport type QueryScheduledReleasesArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<ScheduledReleaseOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<ScheduledReleaseWhereInput>;\n};\n\n\nexport type QueryScheduledReleasesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<ScheduledReleaseOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<ScheduledReleaseWhereInput>;\n};\n\n\nexport type QuerySeoArgs = {\n  locales?: Array<Locale>;\n  stage?: Stage;\n  where: SeoWhereUniqueInput;\n};\n\n\nexport type QuerySeoVersionArgs = {\n  where: VersionWhereInput;\n};\n\n\nexport type QuerySeosArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<SeoOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<SeoWhereInput>;\n};\n\n\nexport type QuerySeosConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<SeoOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<SeoWhereInput>;\n};\n\n\nexport type QueryShowcaseCardArgs = {\n  locales?: Array<Locale>;\n  stage?: Stage;\n  where: ShowcaseCardWhereUniqueInput;\n};\n\n\nexport type QueryShowcaseCardVersionArgs = {\n  where: VersionWhereInput;\n};\n\n\nexport type QueryShowcaseCardsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<ShowcaseCardOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<ShowcaseCardWhereInput>;\n};\n\n\nexport type QueryShowcaseCardsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<ShowcaseCardOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<ShowcaseCardWhereInput>;\n};\n\n\nexport type QueryUserArgs = {\n  locales?: Array<Locale>;\n  stage?: Stage;\n  where: UserWhereUniqueInput;\n};\n\n\nexport type QueryUsersArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<UserOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<UserWhereInput>;\n};\n\n\nexport type QueryUsersConnectionArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: Array<Locale>;\n  orderBy?: InputMaybe<UserOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  stage?: Stage;\n  where?: InputMaybe<UserWhereInput>;\n};\n\n/** Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values */\nexport type RichText = {\n  __typename?: 'RichText';\n  /** Returns HTMl representation */\n  html: Scalars['String'];\n  /** Returns Markdown representation */\n  markdown: Scalars['String'];\n  /** Returns AST representation */\n  raw: Scalars['RichTextAST'];\n  /** Returns plain-text contents of RichText */\n  text: Scalars['String'];\n};\n\n/** Scheduled Operation system model */\nexport type ScheduledOperation = Node & {\n  __typename?: 'ScheduledOperation';\n  affectedDocuments: Array<ScheduledOperationAffectedDocument>;\n  /** The time the document was created */\n  createdAt: Scalars['DateTime'];\n  /** User that created this document */\n  createdBy?: Maybe<User>;\n  /** Operation description */\n  description?: Maybe<Scalars['String']>;\n  /** Get the document in other stages */\n  documentInStages: Array<ScheduledOperation>;\n  /** Operation error message */\n  errorMessage?: Maybe<Scalars['String']>;\n  /** The unique identifier */\n  id: Scalars['ID'];\n  /** The time the document was published. Null on documents in draft stage. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** User that last published this document */\n  publishedBy?: Maybe<User>;\n  /** Raw operation payload including all details, this field is subject to change */\n  rawPayload: Scalars['Json'];\n  /** The release this operation is scheduled for */\n  release?: Maybe<ScheduledRelease>;\n  /** System stage field */\n  stage: Stage;\n  /** operation Status */\n  status: ScheduledOperationStatus;\n  /** The time the document was updated */\n  updatedAt: Scalars['DateTime'];\n  /** User that last updated this document */\n  updatedBy?: Maybe<User>;\n};\n\n\n/** Scheduled Operation system model */\nexport type ScheduledOperationAffectedDocumentsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  skip?: InputMaybe<Scalars['Int']>;\n};\n\n\n/** Scheduled Operation system model */\nexport type ScheduledOperationCreatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\n/** Scheduled Operation system model */\nexport type ScheduledOperationDocumentInStagesArgs = {\n  includeCurrent?: Scalars['Boolean'];\n  inheritLocale?: Scalars['Boolean'];\n  stages?: Array<Stage>;\n};\n\n\n/** Scheduled Operation system model */\nexport type ScheduledOperationPublishedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\n/** Scheduled Operation system model */\nexport type ScheduledOperationReleaseArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\n/** Scheduled Operation system model */\nexport type ScheduledOperationUpdatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\nexport type ScheduledOperationAffectedDocument = Asset | Author | BlogCategory | NavigationLink | Page | Post | Seo | ShowcaseCard;\n\n/** A connection to a list of items. */\nexport type ScheduledOperationConnection = {\n  __typename?: 'ScheduledOperationConnection';\n  aggregate: Aggregate;\n  /** A list of edges. */\n  edges: Array<ScheduledOperationEdge>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type ScheduledOperationEdge = {\n  __typename?: 'ScheduledOperationEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node: ScheduledOperation;\n};\n\nexport enum ScheduledOperationOrderByInput {\n  CreatedAtAsc = 'createdAt_ASC',\n  CreatedAtDesc = 'createdAt_DESC',\n  DescriptionAsc = 'description_ASC',\n  DescriptionDesc = 'description_DESC',\n  ErrorMessageAsc = 'errorMessage_ASC',\n  ErrorMessageDesc = 'errorMessage_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  PublishedAtAsc = 'publishedAt_ASC',\n  PublishedAtDesc = 'publishedAt_DESC',\n  StatusAsc = 'status_ASC',\n  StatusDesc = 'status_DESC',\n  UpdatedAtAsc = 'updatedAt_ASC',\n  UpdatedAtDesc = 'updatedAt_DESC'\n}\n\n/** System Scheduled Operation Status */\nexport enum ScheduledOperationStatus {\n  Canceled = 'CANCELED',\n  Completed = 'COMPLETED',\n  Failed = 'FAILED',\n  InProgress = 'IN_PROGRESS',\n  Pending = 'PENDING'\n}\n\n/** Identifies documents */\nexport type ScheduledOperationWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<ScheduledOperationWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<ScheduledOperationWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<ScheduledOperationWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdBy?: InputMaybe<UserWhereInput>;\n  description?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  description_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  description_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  description_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  description_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  description_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  description_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  description_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  description_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  description_starts_with?: InputMaybe<Scalars['String']>;\n  errorMessage?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  errorMessage_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  errorMessage_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  errorMessage_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  errorMessage_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  errorMessage_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  errorMessage_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  errorMessage_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  errorMessage_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  errorMessage_starts_with?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  publishedBy?: InputMaybe<UserWhereInput>;\n  release?: InputMaybe<ScheduledReleaseWhereInput>;\n  status?: InputMaybe<ScheduledOperationStatus>;\n  /** All values that are contained in given list. */\n  status_in?: InputMaybe<Array<ScheduledOperationStatus>>;\n  /** All values that are not equal to given value. */\n  status_not?: InputMaybe<ScheduledOperationStatus>;\n  /** All values that are not contained in given list. */\n  status_not_in?: InputMaybe<Array<ScheduledOperationStatus>>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedBy?: InputMaybe<UserWhereInput>;\n};\n\n/** References ScheduledOperation record uniquely */\nexport type ScheduledOperationWhereUniqueInput = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\n/** Scheduled Release system model */\nexport type ScheduledRelease = Node & {\n  __typename?: 'ScheduledRelease';\n  /** The time the document was created */\n  createdAt: Scalars['DateTime'];\n  /** User that created this document */\n  createdBy?: Maybe<User>;\n  /** Release description */\n  description?: Maybe<Scalars['String']>;\n  /** Get the document in other stages */\n  documentInStages: Array<ScheduledRelease>;\n  /** Release error message */\n  errorMessage?: Maybe<Scalars['String']>;\n  /** The unique identifier */\n  id: Scalars['ID'];\n  /** Whether scheduled release should be run */\n  isActive: Scalars['Boolean'];\n  /** Whether scheduled release is implicit */\n  isImplicit: Scalars['Boolean'];\n  /** Operations to run with this release */\n  operations: Array<ScheduledOperation>;\n  /** The time the document was published. Null on documents in draft stage. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** User that last published this document */\n  publishedBy?: Maybe<User>;\n  /** Release date and time */\n  releaseAt?: Maybe<Scalars['DateTime']>;\n  /** System stage field */\n  stage: Stage;\n  /** Release Status */\n  status: ScheduledReleaseStatus;\n  /** Release Title */\n  title?: Maybe<Scalars['String']>;\n  /** The time the document was updated */\n  updatedAt: Scalars['DateTime'];\n  /** User that last updated this document */\n  updatedBy?: Maybe<User>;\n};\n\n\n/** Scheduled Release system model */\nexport type ScheduledReleaseCreatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\n/** Scheduled Release system model */\nexport type ScheduledReleaseDocumentInStagesArgs = {\n  includeCurrent?: Scalars['Boolean'];\n  inheritLocale?: Scalars['Boolean'];\n  stages?: Array<Stage>;\n};\n\n\n/** Scheduled Release system model */\nexport type ScheduledReleaseOperationsArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  orderBy?: InputMaybe<ScheduledOperationOrderByInput>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<ScheduledOperationWhereInput>;\n};\n\n\n/** Scheduled Release system model */\nexport type ScheduledReleasePublishedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\n/** Scheduled Release system model */\nexport type ScheduledReleaseUpdatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n/** A connection to a list of items. */\nexport type ScheduledReleaseConnection = {\n  __typename?: 'ScheduledReleaseConnection';\n  aggregate: Aggregate;\n  /** A list of edges. */\n  edges: Array<ScheduledReleaseEdge>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\nexport type ScheduledReleaseCreateInput = {\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  description?: InputMaybe<Scalars['String']>;\n  errorMessage?: InputMaybe<Scalars['String']>;\n  isActive?: InputMaybe<Scalars['Boolean']>;\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  title?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n};\n\n/** An edge in a connection. */\nexport type ScheduledReleaseEdge = {\n  __typename?: 'ScheduledReleaseEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node: ScheduledRelease;\n};\n\nexport enum ScheduledReleaseOrderByInput {\n  CreatedAtAsc = 'createdAt_ASC',\n  CreatedAtDesc = 'createdAt_DESC',\n  DescriptionAsc = 'description_ASC',\n  DescriptionDesc = 'description_DESC',\n  ErrorMessageAsc = 'errorMessage_ASC',\n  ErrorMessageDesc = 'errorMessage_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  IsActiveAsc = 'isActive_ASC',\n  IsActiveDesc = 'isActive_DESC',\n  IsImplicitAsc = 'isImplicit_ASC',\n  IsImplicitDesc = 'isImplicit_DESC',\n  PublishedAtAsc = 'publishedAt_ASC',\n  PublishedAtDesc = 'publishedAt_DESC',\n  ReleaseAtAsc = 'releaseAt_ASC',\n  ReleaseAtDesc = 'releaseAt_DESC',\n  StatusAsc = 'status_ASC',\n  StatusDesc = 'status_DESC',\n  TitleAsc = 'title_ASC',\n  TitleDesc = 'title_DESC',\n  UpdatedAtAsc = 'updatedAt_ASC',\n  UpdatedAtDesc = 'updatedAt_DESC'\n}\n\n/** System Scheduled Release Status */\nexport enum ScheduledReleaseStatus {\n  Completed = 'COMPLETED',\n  Failed = 'FAILED',\n  InProgress = 'IN_PROGRESS',\n  Pending = 'PENDING'\n}\n\nexport type ScheduledReleaseUpdateInput = {\n  description?: InputMaybe<Scalars['String']>;\n  errorMessage?: InputMaybe<Scalars['String']>;\n  isActive?: InputMaybe<Scalars['Boolean']>;\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\n/** Identifies documents */\nexport type ScheduledReleaseWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<ScheduledReleaseWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<ScheduledReleaseWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<ScheduledReleaseWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdBy?: InputMaybe<UserWhereInput>;\n  description?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  description_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  description_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  description_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  description_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  description_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  description_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  description_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  description_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  description_starts_with?: InputMaybe<Scalars['String']>;\n  errorMessage?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  errorMessage_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  errorMessage_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  errorMessage_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  errorMessage_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  errorMessage_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  errorMessage_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  errorMessage_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  errorMessage_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  errorMessage_starts_with?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  isActive?: InputMaybe<Scalars['Boolean']>;\n  /** All values that are not equal to given value. */\n  isActive_not?: InputMaybe<Scalars['Boolean']>;\n  isImplicit?: InputMaybe<Scalars['Boolean']>;\n  /** All values that are not equal to given value. */\n  isImplicit_not?: InputMaybe<Scalars['Boolean']>;\n  operations_every?: InputMaybe<ScheduledOperationWhereInput>;\n  operations_none?: InputMaybe<ScheduledOperationWhereInput>;\n  operations_some?: InputMaybe<ScheduledOperationWhereInput>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  publishedBy?: InputMaybe<UserWhereInput>;\n  releaseAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  releaseAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  releaseAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  releaseAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  releaseAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  releaseAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  releaseAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  releaseAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  status?: InputMaybe<ScheduledReleaseStatus>;\n  /** All values that are contained in given list. */\n  status_in?: InputMaybe<Array<ScheduledReleaseStatus>>;\n  /** All values that are not equal to given value. */\n  status_not?: InputMaybe<ScheduledReleaseStatus>;\n  /** All values that are not contained in given list. */\n  status_not_in?: InputMaybe<Array<ScheduledReleaseStatus>>;\n  title?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  title_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  title_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  title_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  title_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  title_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  title_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  title_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  title_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  title_starts_with?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedBy?: InputMaybe<UserWhereInput>;\n};\n\n/** References ScheduledRelease record uniquely */\nexport type ScheduledReleaseWhereUniqueInput = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\nexport type Seo = Node & {\n  __typename?: 'Seo';\n  /** The time the document was created */\n  createdAt: Scalars['DateTime'];\n  /** User that created this document */\n  createdBy?: Maybe<User>;\n  /** Create a custom meta description */\n  description?: Maybe<Scalars['String']>;\n  /** Get the document in other stages */\n  documentInStages: Array<Seo>;\n  /** List of Seo versions */\n  history: Array<Version>;\n  /** The unique identifier */\n  id: Scalars['ID'];\n  /** Select a custom OG image (the most common size is usually 1280x720) */\n  image?: Maybe<Asset>;\n  /** Select your focus keywords */\n  keywords: Array<Scalars['String']>;\n  /** What pages and blog posts would this SEO apply to? */\n  parent?: Maybe<SeoParent>;\n  /** The time the document was published. Null on documents in draft stage. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** User that last published this document */\n  publishedBy?: Maybe<User>;\n  scheduledIn: Array<ScheduledOperation>;\n  /** System stage field */\n  stage: Stage;\n  /** Create a custom meta title */\n  title?: Maybe<Scalars['String']>;\n  /** The time the document was updated */\n  updatedAt: Scalars['DateTime'];\n  /** User that last updated this document */\n  updatedBy?: Maybe<User>;\n};\n\n\nexport type SeoCreatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type SeoDocumentInStagesArgs = {\n  includeCurrent?: Scalars['Boolean'];\n  inheritLocale?: Scalars['Boolean'];\n  stages?: Array<Stage>;\n};\n\n\nexport type SeoHistoryArgs = {\n  limit?: Scalars['Int'];\n  skip?: Scalars['Int'];\n  stageOverride?: InputMaybe<Stage>;\n};\n\n\nexport type SeoImageArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type SeoParentArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type SeoPublishedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type SeoScheduledInArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<ScheduledOperationWhereInput>;\n};\n\n\nexport type SeoUpdatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\nexport type SeoConnectInput = {\n  /** Allow to specify document position in list of connected documents, will default to appending at end of list */\n  position?: InputMaybe<ConnectPositionInput>;\n  /** Document to connect */\n  where: SeoWhereUniqueInput;\n};\n\n/** A connection to a list of items. */\nexport type SeoConnection = {\n  __typename?: 'SeoConnection';\n  aggregate: Aggregate;\n  /** A list of edges. */\n  edges: Array<SeoEdge>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\nexport type SeoCreateInput = {\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  description?: InputMaybe<Scalars['String']>;\n  image?: InputMaybe<AssetCreateOneInlineInput>;\n  keywords?: InputMaybe<Array<Scalars['String']>>;\n  parent?: InputMaybe<SeoParentCreateOneInlineInput>;\n  title?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n};\n\nexport type SeoCreateManyInlineInput = {\n  /** Connect multiple existing Seo documents */\n  connect?: InputMaybe<Array<SeoWhereUniqueInput>>;\n  /** Create and connect multiple existing Seo documents */\n  create?: InputMaybe<Array<SeoCreateInput>>;\n};\n\nexport type SeoCreateOneInlineInput = {\n  /** Connect one existing Seo document */\n  connect?: InputMaybe<SeoWhereUniqueInput>;\n  /** Create and connect one Seo document */\n  create?: InputMaybe<SeoCreateInput>;\n};\n\n/** An edge in a connection. */\nexport type SeoEdge = {\n  __typename?: 'SeoEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node: Seo;\n};\n\n/** Identifies documents */\nexport type SeoManyWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<SeoWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<SeoWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<SeoWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdBy?: InputMaybe<UserWhereInput>;\n  description?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  description_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  description_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  description_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  description_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  description_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  description_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  description_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  description_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  description_starts_with?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  image?: InputMaybe<AssetWhereInput>;\n  /** Matches if the field array contains *all* items provided to the filter and order does match */\n  keywords?: InputMaybe<Array<Scalars['String']>>;\n  /** Matches if the field array contains *all* items provided to the filter */\n  keywords_contains_all?: InputMaybe<Array<Scalars['String']>>;\n  /** Matches if the field array does not contain any of the items provided to the filter */\n  keywords_contains_none?: InputMaybe<Array<Scalars['String']>>;\n  /** Matches if the field array contains at least one item provided to the filter */\n  keywords_contains_some?: InputMaybe<Array<Scalars['String']>>;\n  /** Matches if the field array does not contains *all* items provided to the filter or order does not match */\n  keywords_not?: InputMaybe<Array<Scalars['String']>>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  publishedBy?: InputMaybe<UserWhereInput>;\n  scheduledIn_every?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_none?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_some?: InputMaybe<ScheduledOperationWhereInput>;\n  title?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  title_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  title_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  title_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  title_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  title_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  title_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  title_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  title_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  title_starts_with?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedBy?: InputMaybe<UserWhereInput>;\n};\n\nexport enum SeoOrderByInput {\n  CreatedAtAsc = 'createdAt_ASC',\n  CreatedAtDesc = 'createdAt_DESC',\n  DescriptionAsc = 'description_ASC',\n  DescriptionDesc = 'description_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  KeywordsAsc = 'keywords_ASC',\n  KeywordsDesc = 'keywords_DESC',\n  PublishedAtAsc = 'publishedAt_ASC',\n  PublishedAtDesc = 'publishedAt_DESC',\n  TitleAsc = 'title_ASC',\n  TitleDesc = 'title_DESC',\n  UpdatedAtAsc = 'updatedAt_ASC',\n  UpdatedAtDesc = 'updatedAt_DESC'\n}\n\nexport type SeoParent = Page | Post;\n\nexport type SeoParentCreateInput = {\n  Page?: InputMaybe<PageCreateInput>;\n  Post?: InputMaybe<PostCreateInput>;\n};\n\nexport type SeoParentCreateOneInlineInput = {\n  /** Connect one existing SeoParent document */\n  connect?: InputMaybe<SeoParentWhereUniqueInput>;\n  /** Create and connect one SeoParent document */\n  create?: InputMaybe<SeoParentCreateInput>;\n};\n\nexport type SeoParentUpdateOneInlineInput = {\n  /** Connect existing SeoParent document */\n  connect?: InputMaybe<SeoParentWhereUniqueInput>;\n  /** Create and connect one SeoParent document */\n  create?: InputMaybe<SeoParentCreateInput>;\n  /** Delete currently connected SeoParent document */\n  delete?: InputMaybe<Scalars['Boolean']>;\n  /** Disconnect currently connected SeoParent document */\n  disconnect?: InputMaybe<Scalars['Boolean']>;\n  /** Update single SeoParent document */\n  update?: InputMaybe<SeoParentUpdateWithNestedWhereUniqueInput>;\n  /** Upsert single SeoParent document */\n  upsert?: InputMaybe<SeoParentUpsertWithNestedWhereUniqueInput>;\n};\n\nexport type SeoParentUpdateWithNestedWhereUniqueInput = {\n  Page?: InputMaybe<PageUpdateWithNestedWhereUniqueInput>;\n  Post?: InputMaybe<PostUpdateWithNestedWhereUniqueInput>;\n};\n\nexport type SeoParentUpsertWithNestedWhereUniqueInput = {\n  Page?: InputMaybe<PageUpsertWithNestedWhereUniqueInput>;\n  Post?: InputMaybe<PostUpsertWithNestedWhereUniqueInput>;\n};\n\nexport type SeoParentWhereUniqueInput = {\n  Page?: InputMaybe<PageWhereUniqueInput>;\n  Post?: InputMaybe<PostWhereUniqueInput>;\n};\n\nexport type SeoUpdateInput = {\n  description?: InputMaybe<Scalars['String']>;\n  image?: InputMaybe<AssetUpdateOneInlineInput>;\n  keywords?: InputMaybe<Array<Scalars['String']>>;\n  parent?: InputMaybe<SeoParentUpdateOneInlineInput>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\nexport type SeoUpdateManyInlineInput = {\n  /** Connect multiple existing Seo documents */\n  connect?: InputMaybe<Array<SeoConnectInput>>;\n  /** Create and connect multiple Seo documents */\n  create?: InputMaybe<Array<SeoCreateInput>>;\n  /** Delete multiple Seo documents */\n  delete?: InputMaybe<Array<SeoWhereUniqueInput>>;\n  /** Disconnect multiple Seo documents */\n  disconnect?: InputMaybe<Array<SeoWhereUniqueInput>>;\n  /** Override currently-connected documents with multiple existing Seo documents */\n  set?: InputMaybe<Array<SeoWhereUniqueInput>>;\n  /** Update multiple Seo documents */\n  update?: InputMaybe<Array<SeoUpdateWithNestedWhereUniqueInput>>;\n  /** Upsert multiple Seo documents */\n  upsert?: InputMaybe<Array<SeoUpsertWithNestedWhereUniqueInput>>;\n};\n\nexport type SeoUpdateManyInput = {\n  description?: InputMaybe<Scalars['String']>;\n  keywords?: InputMaybe<Array<Scalars['String']>>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\nexport type SeoUpdateOneInlineInput = {\n  /** Connect existing Seo document */\n  connect?: InputMaybe<SeoWhereUniqueInput>;\n  /** Create and connect one Seo document */\n  create?: InputMaybe<SeoCreateInput>;\n  /** Delete currently connected Seo document */\n  delete?: InputMaybe<Scalars['Boolean']>;\n  /** Disconnect currently connected Seo document */\n  disconnect?: InputMaybe<Scalars['Boolean']>;\n  /** Update single Seo document */\n  update?: InputMaybe<SeoUpdateWithNestedWhereUniqueInput>;\n  /** Upsert single Seo document */\n  upsert?: InputMaybe<SeoUpsertWithNestedWhereUniqueInput>;\n};\n\nexport type SeoUpdateWithNestedWhereUniqueInput = {\n  /** Document to update */\n  data: SeoUpdateInput;\n  /** Unique document search */\n  where: SeoWhereUniqueInput;\n};\n\nexport type SeoUpsertInput = {\n  /** Create document if it didn't exist */\n  create: SeoCreateInput;\n  /** Update document if it exists */\n  update: SeoUpdateInput;\n};\n\nexport type SeoUpsertWithNestedWhereUniqueInput = {\n  /** Upsert data */\n  data: SeoUpsertInput;\n  /** Unique document search */\n  where: SeoWhereUniqueInput;\n};\n\n/** Identifies documents */\nexport type SeoWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<SeoWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<SeoWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<SeoWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdBy?: InputMaybe<UserWhereInput>;\n  description?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  description_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  description_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  description_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  description_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  description_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  description_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  description_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  description_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  description_starts_with?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  image?: InputMaybe<AssetWhereInput>;\n  /** Matches if the field array contains *all* items provided to the filter and order does match */\n  keywords?: InputMaybe<Array<Scalars['String']>>;\n  /** Matches if the field array contains *all* items provided to the filter */\n  keywords_contains_all?: InputMaybe<Array<Scalars['String']>>;\n  /** Matches if the field array does not contain any of the items provided to the filter */\n  keywords_contains_none?: InputMaybe<Array<Scalars['String']>>;\n  /** Matches if the field array contains at least one item provided to the filter */\n  keywords_contains_some?: InputMaybe<Array<Scalars['String']>>;\n  /** Matches if the field array does not contains *all* items provided to the filter or order does not match */\n  keywords_not?: InputMaybe<Array<Scalars['String']>>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  publishedBy?: InputMaybe<UserWhereInput>;\n  scheduledIn_every?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_none?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_some?: InputMaybe<ScheduledOperationWhereInput>;\n  title?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  title_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  title_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  title_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  title_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  title_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  title_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  title_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  title_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  title_starts_with?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedBy?: InputMaybe<UserWhereInput>;\n};\n\n/** References Seo record uniquely */\nexport type SeoWhereUniqueInput = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\nexport type ShowcaseCard = Node & {\n  __typename?: 'ShowcaseCard';\n  /** The time the document was created */\n  createdAt: Scalars['DateTime'];\n  /** User that created this document */\n  createdBy?: Maybe<User>;\n  /** Get the document in other stages */\n  documentInStages: Array<ShowcaseCard>;\n  /** List of ShowcaseCard versions */\n  history: Array<Version>;\n  /** The unique identifier */\n  id: Scalars['ID'];\n  image: Asset;\n  /** The time the document was published. Null on documents in draft stage. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** User that last published this document */\n  publishedBy?: Maybe<User>;\n  scheduledIn: Array<ScheduledOperation>;\n  /** System stage field */\n  stage: Stage;\n  text: Scalars['String'];\n  /** The time the document was updated */\n  updatedAt: Scalars['DateTime'];\n  /** User that last updated this document */\n  updatedBy?: Maybe<User>;\n  url: Scalars['String'];\n};\n\n\nexport type ShowcaseCardCreatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type ShowcaseCardDocumentInStagesArgs = {\n  includeCurrent?: Scalars['Boolean'];\n  inheritLocale?: Scalars['Boolean'];\n  stages?: Array<Stage>;\n};\n\n\nexport type ShowcaseCardHistoryArgs = {\n  limit?: Scalars['Int'];\n  skip?: Scalars['Int'];\n  stageOverride?: InputMaybe<Stage>;\n};\n\n\nexport type ShowcaseCardImageArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type ShowcaseCardPublishedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\n\nexport type ShowcaseCardScheduledInArgs = {\n  after?: InputMaybe<Scalars['String']>;\n  before?: InputMaybe<Scalars['String']>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  locales?: InputMaybe<Array<Locale>>;\n  skip?: InputMaybe<Scalars['Int']>;\n  where?: InputMaybe<ScheduledOperationWhereInput>;\n};\n\n\nexport type ShowcaseCardUpdatedByArgs = {\n  locales?: InputMaybe<Array<Locale>>;\n};\n\nexport type ShowcaseCardConnectInput = {\n  /** Allow to specify document position in list of connected documents, will default to appending at end of list */\n  position?: InputMaybe<ConnectPositionInput>;\n  /** Document to connect */\n  where: ShowcaseCardWhereUniqueInput;\n};\n\n/** A connection to a list of items. */\nexport type ShowcaseCardConnection = {\n  __typename?: 'ShowcaseCardConnection';\n  aggregate: Aggregate;\n  /** A list of edges. */\n  edges: Array<ShowcaseCardEdge>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\nexport type ShowcaseCardCreateInput = {\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  image: AssetCreateOneInlineInput;\n  text: Scalars['String'];\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  url: Scalars['String'];\n};\n\nexport type ShowcaseCardCreateManyInlineInput = {\n  /** Connect multiple existing ShowcaseCard documents */\n  connect?: InputMaybe<Array<ShowcaseCardWhereUniqueInput>>;\n  /** Create and connect multiple existing ShowcaseCard documents */\n  create?: InputMaybe<Array<ShowcaseCardCreateInput>>;\n};\n\n/** An edge in a connection. */\nexport type ShowcaseCardEdge = {\n  __typename?: 'ShowcaseCardEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node: ShowcaseCard;\n};\n\n/** Identifies documents */\nexport type ShowcaseCardManyWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<ShowcaseCardWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<ShowcaseCardWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<ShowcaseCardWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdBy?: InputMaybe<UserWhereInput>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  image?: InputMaybe<AssetWhereInput>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  publishedBy?: InputMaybe<UserWhereInput>;\n  scheduledIn_every?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_none?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_some?: InputMaybe<ScheduledOperationWhereInput>;\n  text?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  text_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  text_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  text_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  text_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  text_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  text_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  text_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  text_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  text_starts_with?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedBy?: InputMaybe<UserWhereInput>;\n  url?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  url_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  url_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  url_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  url_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  url_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  url_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  url_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  url_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  url_starts_with?: InputMaybe<Scalars['String']>;\n};\n\nexport enum ShowcaseCardOrderByInput {\n  CreatedAtAsc = 'createdAt_ASC',\n  CreatedAtDesc = 'createdAt_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  PublishedAtAsc = 'publishedAt_ASC',\n  PublishedAtDesc = 'publishedAt_DESC',\n  TextAsc = 'text_ASC',\n  TextDesc = 'text_DESC',\n  UpdatedAtAsc = 'updatedAt_ASC',\n  UpdatedAtDesc = 'updatedAt_DESC',\n  UrlAsc = 'url_ASC',\n  UrlDesc = 'url_DESC'\n}\n\nexport type ShowcaseCardUpdateInput = {\n  image?: InputMaybe<AssetUpdateOneInlineInput>;\n  text?: InputMaybe<Scalars['String']>;\n  url?: InputMaybe<Scalars['String']>;\n};\n\nexport type ShowcaseCardUpdateManyInlineInput = {\n  /** Connect multiple existing ShowcaseCard documents */\n  connect?: InputMaybe<Array<ShowcaseCardConnectInput>>;\n  /** Create and connect multiple ShowcaseCard documents */\n  create?: InputMaybe<Array<ShowcaseCardCreateInput>>;\n  /** Delete multiple ShowcaseCard documents */\n  delete?: InputMaybe<Array<ShowcaseCardWhereUniqueInput>>;\n  /** Disconnect multiple ShowcaseCard documents */\n  disconnect?: InputMaybe<Array<ShowcaseCardWhereUniqueInput>>;\n  /** Override currently-connected documents with multiple existing ShowcaseCard documents */\n  set?: InputMaybe<Array<ShowcaseCardWhereUniqueInput>>;\n  /** Update multiple ShowcaseCard documents */\n  update?: InputMaybe<Array<ShowcaseCardUpdateWithNestedWhereUniqueInput>>;\n  /** Upsert multiple ShowcaseCard documents */\n  upsert?: InputMaybe<Array<ShowcaseCardUpsertWithNestedWhereUniqueInput>>;\n};\n\nexport type ShowcaseCardUpdateManyInput = {\n  url?: InputMaybe<Scalars['String']>;\n};\n\nexport type ShowcaseCardUpdateWithNestedWhereUniqueInput = {\n  /** Document to update */\n  data: ShowcaseCardUpdateInput;\n  /** Unique document search */\n  where: ShowcaseCardWhereUniqueInput;\n};\n\nexport type ShowcaseCardUpsertInput = {\n  /** Create document if it didn't exist */\n  create: ShowcaseCardCreateInput;\n  /** Update document if it exists */\n  update: ShowcaseCardUpdateInput;\n};\n\nexport type ShowcaseCardUpsertWithNestedWhereUniqueInput = {\n  /** Upsert data */\n  data: ShowcaseCardUpsertInput;\n  /** Unique document search */\n  where: ShowcaseCardWhereUniqueInput;\n};\n\n/** Identifies documents */\nexport type ShowcaseCardWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<ShowcaseCardWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<ShowcaseCardWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<ShowcaseCardWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  createdBy?: InputMaybe<UserWhereInput>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  image?: InputMaybe<AssetWhereInput>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  publishedBy?: InputMaybe<UserWhereInput>;\n  scheduledIn_every?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_none?: InputMaybe<ScheduledOperationWhereInput>;\n  scheduledIn_some?: InputMaybe<ScheduledOperationWhereInput>;\n  text?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  text_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  text_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  text_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  text_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  text_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  text_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  text_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  text_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  text_starts_with?: InputMaybe<Scalars['String']>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedBy?: InputMaybe<UserWhereInput>;\n  url?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  url_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  url_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  url_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  url_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  url_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  url_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  url_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  url_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  url_starts_with?: InputMaybe<Scalars['String']>;\n};\n\n/** References ShowcaseCard record uniquely */\nexport type ShowcaseCardWhereUniqueInput = {\n  id?: InputMaybe<Scalars['ID']>;\n  text?: InputMaybe<Scalars['String']>;\n};\n\n/** Stage system enumeration */\nexport enum Stage {\n  /** The Draft is the default stage for all your content. */\n  Draft = 'DRAFT',\n  /** The Published stage is where you can publish your content to. */\n  Published = 'PUBLISHED'\n}\n\nexport enum SystemDateTimeFieldVariation {\n  Base = 'BASE',\n  Combined = 'COMBINED',\n  Localization = 'LOCALIZATION'\n}\n\n/** User system model */\nexport type User = Node & {\n  __typename?: 'User';\n  /** The time the document was created */\n  createdAt: Scalars['DateTime'];\n  /** Get the document in other stages */\n  documentInStages: Array<User>;\n  /** The unique identifier */\n  id: Scalars['ID'];\n  /** Flag to determine if user is active or not */\n  isActive: Scalars['Boolean'];\n  /** User Kind. Can be either MEMBER, PAT or PUBLIC */\n  kind: UserKind;\n  /** The username */\n  name: Scalars['String'];\n  /** Profile Picture url */\n  picture?: Maybe<Scalars['String']>;\n  /** The time the document was published. Null on documents in draft stage. */\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  /** System stage field */\n  stage: Stage;\n  /** The time the document was updated */\n  updatedAt: Scalars['DateTime'];\n};\n\n\n/** User system model */\nexport type UserDocumentInStagesArgs = {\n  includeCurrent?: Scalars['Boolean'];\n  inheritLocale?: Scalars['Boolean'];\n  stages?: Array<Stage>;\n};\n\n/** A connection to a list of items. */\nexport type UserConnection = {\n  __typename?: 'UserConnection';\n  aggregate: Aggregate;\n  /** A list of edges. */\n  edges: Array<UserEdge>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n};\n\n/** An edge in a connection. */\nexport type UserEdge = {\n  __typename?: 'UserEdge';\n  /** A cursor for use in pagination. */\n  cursor: Scalars['String'];\n  /** The item at the end of the edge. */\n  node: User;\n};\n\n/** System User Kind */\nexport enum UserKind {\n  Member = 'MEMBER',\n  Pat = 'PAT',\n  Public = 'PUBLIC',\n  Webhook = 'WEBHOOK'\n}\n\nexport enum UserOrderByInput {\n  CreatedAtAsc = 'createdAt_ASC',\n  CreatedAtDesc = 'createdAt_DESC',\n  IdAsc = 'id_ASC',\n  IdDesc = 'id_DESC',\n  IsActiveAsc = 'isActive_ASC',\n  IsActiveDesc = 'isActive_DESC',\n  KindAsc = 'kind_ASC',\n  KindDesc = 'kind_DESC',\n  NameAsc = 'name_ASC',\n  NameDesc = 'name_DESC',\n  PictureAsc = 'picture_ASC',\n  PictureDesc = 'picture_DESC',\n  PublishedAtAsc = 'publishedAt_ASC',\n  PublishedAtDesc = 'publishedAt_DESC',\n  UpdatedAtAsc = 'updatedAt_ASC',\n  UpdatedAtDesc = 'updatedAt_DESC'\n}\n\n/** Identifies documents */\nexport type UserWhereInput = {\n  /** Logical AND on all given filters. */\n  AND?: InputMaybe<Array<UserWhereInput>>;\n  /** Logical NOT on all given filters combined by AND. */\n  NOT?: InputMaybe<Array<UserWhereInput>>;\n  /** Logical OR on all given filters. */\n  OR?: InputMaybe<Array<UserWhereInput>>;\n  /** Contains search across all appropriate fields. */\n  _search?: InputMaybe<Scalars['String']>;\n  createdAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  createdAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  createdAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  createdAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  createdAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  createdAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  createdAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  createdAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  id?: InputMaybe<Scalars['ID']>;\n  /** All values containing the given string. */\n  id_contains?: InputMaybe<Scalars['ID']>;\n  /** All values ending with the given string. */\n  id_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are contained in given list. */\n  id_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values that are not equal to given value. */\n  id_not?: InputMaybe<Scalars['ID']>;\n  /** All values not containing the given string. */\n  id_not_contains?: InputMaybe<Scalars['ID']>;\n  /** All values not ending with the given string */\n  id_not_ends_with?: InputMaybe<Scalars['ID']>;\n  /** All values that are not contained in given list. */\n  id_not_in?: InputMaybe<Array<Scalars['ID']>>;\n  /** All values not starting with the given string. */\n  id_not_starts_with?: InputMaybe<Scalars['ID']>;\n  /** All values starting with the given string. */\n  id_starts_with?: InputMaybe<Scalars['ID']>;\n  isActive?: InputMaybe<Scalars['Boolean']>;\n  /** All values that are not equal to given value. */\n  isActive_not?: InputMaybe<Scalars['Boolean']>;\n  kind?: InputMaybe<UserKind>;\n  /** All values that are contained in given list. */\n  kind_in?: InputMaybe<Array<UserKind>>;\n  /** All values that are not equal to given value. */\n  kind_not?: InputMaybe<UserKind>;\n  /** All values that are not contained in given list. */\n  kind_not_in?: InputMaybe<Array<UserKind>>;\n  name?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  name_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  name_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  name_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  name_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  name_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  name_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  name_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  name_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  name_starts_with?: InputMaybe<Scalars['String']>;\n  picture?: InputMaybe<Scalars['String']>;\n  /** All values containing the given string. */\n  picture_contains?: InputMaybe<Scalars['String']>;\n  /** All values ending with the given string. */\n  picture_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are contained in given list. */\n  picture_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values that are not equal to given value. */\n  picture_not?: InputMaybe<Scalars['String']>;\n  /** All values not containing the given string. */\n  picture_not_contains?: InputMaybe<Scalars['String']>;\n  /** All values not ending with the given string */\n  picture_not_ends_with?: InputMaybe<Scalars['String']>;\n  /** All values that are not contained in given list. */\n  picture_not_in?: InputMaybe<Array<Scalars['String']>>;\n  /** All values not starting with the given string. */\n  picture_not_starts_with?: InputMaybe<Scalars['String']>;\n  /** All values starting with the given string. */\n  picture_starts_with?: InputMaybe<Scalars['String']>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  publishedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  publishedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  publishedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  publishedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  publishedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  publishedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  publishedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  updatedAt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than the given value. */\n  updatedAt_gt?: InputMaybe<Scalars['DateTime']>;\n  /** All values greater than or equal the given value. */\n  updatedAt_gte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are contained in given list. */\n  updatedAt_in?: InputMaybe<Array<Scalars['DateTime']>>;\n  /** All values less than the given value. */\n  updatedAt_lt?: InputMaybe<Scalars['DateTime']>;\n  /** All values less than or equal the given value. */\n  updatedAt_lte?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not equal to given value. */\n  updatedAt_not?: InputMaybe<Scalars['DateTime']>;\n  /** All values that are not contained in given list. */\n  updatedAt_not_in?: InputMaybe<Array<Scalars['DateTime']>>;\n};\n\n/** References User record uniquely */\nexport type UserWhereUniqueInput = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\nexport type Version = {\n  __typename?: 'Version';\n  createdAt: Scalars['DateTime'];\n  id: Scalars['ID'];\n  revision: Scalars['Int'];\n  stage: Stage;\n};\n\nexport type VersionWhereInput = {\n  id: Scalars['ID'];\n  revision: Scalars['Int'];\n  stage: Stage;\n};\n\n/** mutation root */\nexport type Mutation_Root = {\n  __typename?: 'mutation_root';\n  graphcms?: Maybe<Mutation>;\n};\n\nexport type Query_Root = {\n  __typename?: 'query_root';\n  graphcms?: Maybe<Query>;\n};\n\nexport type GetNavigationQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetNavigationQuery = { __typename?: 'query_root', graphcms?: { __typename?: 'Query', navigationLinks: Array<{ __typename?: 'NavigationLink', url: string, linkText: string }> } | null };\n\n\nexport const GetNavigation = gql`\n    query GetNavigation {\n  graphcms {\n    navigationLinks {\n      url\n      linkText\n    }\n  }\n}\n    `;\n\n      export interface PossibleTypesResultData {\n        possibleTypes: {\n          [key: string]: string[]\n        }\n      }\n      const result: PossibleTypesResultData = {\n  \"possibleTypes\": {\n    \"Node\": [\n      \"Asset\",\n      \"Author\",\n      \"BlogCategory\",\n      \"NavigationLink\",\n      \"Page\",\n      \"Post\",\n      \"ScheduledOperation\",\n      \"ScheduledRelease\",\n      \"Seo\",\n      \"ShowcaseCard\",\n      \"User\"\n    ],\n    \"ScheduledOperationAffectedDocument\": [\n      \"Asset\",\n      \"Author\",\n      \"BlogCategory\",\n      \"NavigationLink\",\n      \"Page\",\n      \"Post\",\n      \"Seo\",\n      \"ShowcaseCard\"\n    ],\n    \"SeoParent\": [\n      \"Page\",\n      \"Post\"\n    ]\n  }\n};\n      export default result;\n    ", "import { GraphQLClient } from 'graphql-request'\n\nexport const graphQlClient = new GraphQLClient(\n  process.env.HASURA_ENDPOINT || '',\n  {\n    headers: {\n      'content-type': 'application/json',\n      'x-hasura-admin-secret': `${process.env.HASURA_TOKEN || ''}`,\n    },\n  },\n)\n", "export default function Index() {\n  return (\n    <div style={{ fontFamily: 'system-ui, sans-serif', lineHeight: '1.4' }}>\n      <h1>Welcome to Remix</h1>\n      <ul>\n        <li>\n          <a\n            target='_blank'\n            href='https://remix.run/tutorials/blog'\n            rel='noreferrer'\n          >\n            15m Quickstart Blog Tutorial\n          </a>\n        </li>\n        <li>\n          <a\n            target='_blank'\n            href='https://remix.run/tutorials/jokes'\n            rel='noreferrer'\n          >\n            Deep Dive Jokes App Tutorial\n          </a>\n        </li>\n        <li>\n          <a target='_blank' href='https://remix.run/docs' rel='noreferrer'>\n            Remix Docs\n          </a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n", "export default {'version':'dfaebd12','entry':{'module':'/build/entry.client-T7OVVCWU.js','imports':['/build/_shared/chunk-PPU2MWHU.js','/build/_shared/chunk-IYRIQ6PI.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-CN6ZK544.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-7OVK5GWH.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-DFAEBD12.js'};", "\nimport * as entryServer from \"/Users/michael/Dev/remix/scripthungry-vercel/app/entry.server.tsx\";\nimport * as route0 from \"/Users/michael/Dev/remix/scripthungry-vercel/app/root.tsx\";\nimport * as route1 from \"/Users/michael/Dev/remix/scripthungry-vercel/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCA,YAAuB;;;ACDvB;AAAA;AAAA;AAAA;AACA,mBAA4B;AAC5B,oBAA+B;AAEhB,uBACb,SACA,oBACA,iBACA,cACA;AACA,MAAI,SAAS,kCACX,oCAAC,0BAAD;AAAA,IAAa,SAAS;AAAA,IAAc,KAAK,QAAQ;AAAA;AAGnD,kBAAgB,IAAI,gBAAgB;AAEpC,SAAO,IAAI,SAAS,oBAAoB,QAAQ;AAAA,IAC9C,QAAQ;AAAA,IACR,SAAS;AAAA;AAAA;;;AClBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAQO;;;ACTA,IAAM,SAAS,MAAM;AAC1B,QAAM,QAAQ,IAAI;AAClB,QAAM,YAAY;AAClB,QAAM,cAAc,MAAM;AAE1B,SACE,oCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,KAA6B,mBAChC,WACZ,cAAc,YAAY,IAAI,gBAAgB,IAAG;AAAA;;;ACRxD,oBAAkC;AAK3B,IAAM,cAAc,CAAC,OAA+C;AAA/C,eAAE,MAAI,aAAN,IAAmB,kBAAnB,IAAmB,CAAjB,MAAI;AAChC,QAAM,gBAAgB,MAAM;AAC1B,UAAuE,aAA/D,YAAU,gBAAgB,SAAS,UAA4B,KAAlB,2BAAkB,KAAlB,CAA7C,YAAU,kBAAgB,WAAS;AAC3C,WAAO;AAAA;AAET,MAAI,GAAG,WAAW,WAAW,SAAS;AACpC,WACE,oCAAC,KAAD;AAAA,MAAG,MAAM,GAAG;AAAA,OAAgB,gBACzB;AAAA;AAIP,SACE,oCAAC,oBAAD;AAAA,IAAW;AAAA,KAAY,QACpB;AAAA;;;ACfA,IAAM,eAAe,CAAC,EAAE,eAC7B,oCAAC,OAAD;AAAA,EAAK,WAAU;AAAA,GACb,oCAAC,SAAD;AAAA,EAAO,SAAQ;AAAA,EAAc,WAAU;AAAA,IACvC,oCAAC,MAAD;AAAA,EAAI,WAAU;AAAA,GACX,qCAAU,IAAI,CAAC,EAAE,KAAK,eACrB,oCAAC,MAAD;AAAA,EAAI,KAAK;AAAA,GACP,oCAAC,aAAD;AAAA,EAAa,IAAI;AAAA,GAAM;;;ACVjC,oBAAqB;;;ACAd,IAAM,eAAe,MAC1B,oCAAC,SAAD;AAAA,EAAO,SAAQ;AAAA,EAAc,WAAU;AAAA,GACrC,oCAAC,OAAD;AAAA,EACE,OAAM;AAAA,EACN,MAAK;AAAA,EACL,SAAQ;AAAA,EACR,WAAU;AAAA,GAEV,oCAAC,QAAD;AAAA,EACE,eAAc;AAAA,EACd,gBAAe;AAAA,EACf,aAAY;AAAA,EACZ,GAAE;AAAA;;;ACVH,IAAM,UAAU,CAAC;AAAA,EACtB;AAAA,EACA;AAAA,MAKA,oCAAC,MAAD,MACE,oCAAC,aAAD;AAAA,EAAa,IAAI;AAAA,EAAK,WAAU;AAAA,EAAO,UAAS;AAAA,EAAS,aAAU;AAAA,GAChE;;;AFJA,IAAM,MAAM,CAAC,EAAE,eAA+C;AACnE,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,oBAAD;AAAA,IAAM,IAAG;AAAA,KAAI,kBAEf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,cAAD,QAEF,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KACX,SAAS,IAAI,CAAC,EAAE,KAAK,eAEpB,oCAAC,SAAD;AAAA,IAAS;AAAA,IAAU;AAAA,IAAoB,KAAK,YAAY;AAAA;AAAA;;;AGrBtE,yBAAgB;AAsrNT,IAAM,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACtrN7B,6BAA8B;AAEvB,IAAM,gBAAgB,IAAI,qCAC/B,QAAQ,IAAI,mBAAmB,IAC/B;AAAA,EACE,SAAS;AAAA,IACP,gBAAgB;AAAA,IAChB,yBAAyB,GAAG,QAAQ,IAAI,gBAAgB;AAAA;AAAA;;;;;;ARevD,IAAM,OAAqB,MAAO;AAAA,EACvC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AAAA;AAGL,IAAM,QAAQ,MAAM;AACzB,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM;AAAA;AAO9B,IAAM,SAAyB,YAAY;AApClD;AAqCE,QAAM,iBAAqC,MAAM,cAAc,QAC7D;AAEF,UAAQ,IAAI;AAEZ,SAAO;AAAA,IACL,UAAU,uDAAgB,aAAhB,mBAA0B;AAAA;AAAA;AAIjC,IAAM,MAAM,MAAM;AACvB,QAAM,EAAE,aAAyB;AACjC,SACE,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,IAAK,WAAU;AAAA,KACxB,oCAAC,QAAD,MACE,oCAAC,oBAAD,OACA,oCAAC,qBAAD,QAGF,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACd,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,SAAD;AAAA,IAAO,IAAG;AAAA,IAAc,MAAK;AAAA,IAAW,WAAU;AAAA,MAClD,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD;AAAA,IAAK;AAAA,MACL,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,sBAAD,QAEF,oCAAC,QAAD,SAGJ,oCAAC,cAAD;AAAA,IAAc;AAAA,OAEhB,oCAAC,iCAAD,OACA,oCAAC,uBAAD,OACA,oCAAC,0BAAD;AAAA;AAMR,IAAO,eAAQ;;;AS9Ef;AAAA;AAAA;AAAA;AAAe,iBAAiB;AAC9B,SACE,oCAAC,OAAD;AAAA,IAAK,OAAO,EAAE,YAAY,yBAAyB,YAAY;AAAA,KAC7D,oCAAC,MAAD,MAAI,qBACJ,oCAAC,MAAD,MACE,oCAAC,MAAD,MACE,oCAAC,KAAD;AAAA,IACE,QAAO;AAAA,IACP,MAAK;AAAA,IACL,KAAI;AAAA,KACL,kCAIH,oCAAC,MAAD,MACE,oCAAC,KAAD;AAAA,IACE,QAAO;AAAA,IACP,MAAK;AAAA,IACL,KAAI;AAAA,KACL,kCAIH,oCAAC,MAAD,MACE,oCAAC,KAAD;AAAA,IAAG,QAAO;AAAA,IAAS,MAAK;AAAA,IAAyB,KAAI;AAAA,KAAa;AAAA;;;ACxB5E,IAAO,0BAAQ,EAAC,WAAU,YAAW,SAAQ,EAAC,UAAS,mCAAkC,WAAU,CAAC,oCAAmC,uCAAqC,UAAS,EAAC,QAAO,EAAC,MAAK,QAAO,YAAW,QAAU,QAAO,IAAG,SAAQ,QAAU,iBAAgB,QAAU,UAAS,2BAA0B,WAAU,QAAU,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,gBAAe,EAAC,MAAK,gBAAe,YAAW,QAAO,QAAO,QAAU,SAAQ,MAAK,iBAAgB,QAAU,UAAS,mCAAkC,WAAU,QAAU,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,WAAQ,OAAM;;;ACKpqB,IAAM,QAAQ,EAAE,QAAQ;AACxB,IAAM,SAAS;AAAA,EACpB,QAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA;",
  "names": []
}
